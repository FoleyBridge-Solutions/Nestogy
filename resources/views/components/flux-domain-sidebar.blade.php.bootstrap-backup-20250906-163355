@props(['activeDomain' => null, 'activeItem' => null, 'mobile' => false])

@php
$mobile = $mobile ?? false;

// Sidebar configuration with enhanced UX structure
$sidebarConfig = [
    'clients' => [
        'title' => 'Client Management',
        'icon' => 'user-group',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Client Details',
                        'route' => 'clients.show',
                        'icon' => 'chart-pie',
                        'key' => 'details',
                        'params' => ['client' => 'current'],
                        'description' => 'Central hub with client health and quick actions'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'IMMEDIATE ACTIONS',
                'priority' => true,
                'expandable' => false,
                'items' => [
                    [
                        'name' => 'Open Tickets',
                        'route' => 'tickets.index',
                        'icon' => 'exclamation-triangle',
                        'key' => 'open-tickets',
                        'params' => ['client_id' => 'current', 'status' => 'open'],
                        'badge_type' => 'urgent',
                        'show_if' => 'has_open_tickets'
                    ],
                    [
                        'name' => 'Pending Items',
                        'route' => 'clients.show',
                        'icon' => 'clock',
                        'key' => 'pending',
                        'params' => ['client' => 'current', 'section' => 'pending'],
                        'badge_type' => 'warning',
                        'show_if' => 'has_pending_items'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'COMMUNICATION',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Contacts',
                        'route' => 'clients.contacts.index',
                        'icon' => 'users',
                        'key' => 'contacts',
                        'params' => ['client' => 'current']
                    ],
                    [
                        'name' => 'Locations',
                        'route' => 'clients.locations.index',
                        'icon' => 'map-pin',
                        'key' => 'locations',
                        'params' => ['client' => 'current']
                    ],
                    [
                        'name' => 'Communication Log',
                        'route' => 'clients.show',
                        'icon' => 'chat-bubble-left-right',
                        'key' => 'communication',
                        'params' => ['client' => 'current', 'section' => 'communication']
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'SERVICE MANAGEMENT',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Support Tickets',
                        'route' => 'tickets.index',
                        'icon' => 'ticket',
                        'key' => 'tickets',
                        'params' => ['client_id' => 'current']
                    ],
                    [
                        'name' => 'Assets & Equipment',
                        'route' => 'assets.index',
                        'icon' => 'computer-desktop',
                        'key' => 'assets',
                        'params' => ['client_id' => 'current']
                    ],
                    [
                        'name' => 'Projects',
                        'route' => 'projects.index',
                        'icon' => 'folder',
                        'key' => 'projects',
                        'params' => ['client_id' => 'current']
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'BILLING & FINANCE',
                'expandable' => true,
                'default_expanded' => false,
                'items' => [
                    [
                        'name' => 'Contracts',
                        'route' => 'financial.contracts.index',
                        'icon' => 'document-check',
                        'key' => 'contracts',
                        'params' => ['client_id' => 'current']
                    ],
                    [
                        'name' => 'Invoices',
                        'route' => 'financial.invoices.index',
                        'icon' => 'document-text',
                        'key' => 'invoices',
                        'params' => ['client_id' => 'current']
                    ],
                    [
                        'name' => 'Payments',
                        'route' => 'financial.payments.index',
                        'icon' => 'credit-card',
                        'key' => 'payments',
                        'params' => ['client_id' => 'current']
                    ]
                ]
            ]
        ]
    ],
    'tickets' => [
        'title' => 'Ticket Management',
        'icon' => 'ticket',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Overview',
                        'route' => 'tickets.index',
                        'icon' => 'home',
                        'key' => 'overview'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'MY WORK',
                'expandable' => false,
                'items' => [
                    [
                        'name' => 'My Tickets',
                        'route' => 'tickets.index',
                        'icon' => 'user',
                        'key' => 'my-tickets',
                        'params' => ['filter' => 'my']
                    ],
                    [
                        'name' => 'Assigned to Me',
                        'route' => 'tickets.index',
                        'icon' => 'user-circle',
                        'key' => 'assigned',
                        'params' => ['assignee' => 'me']
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'STATUS VIEWS',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Open Tickets',
                        'route' => 'tickets.index',
                        'icon' => 'exclamation-circle',
                        'key' => 'open',
                        'params' => ['status' => 'open']
                    ],
                    [
                        'name' => 'In Progress',
                        'route' => 'tickets.index',
                        'icon' => 'arrow-right',
                        'key' => 'in-progress',
                        'params' => ['status' => 'in-progress']
                    ],
                    [
                        'name' => 'Closed Tickets',
                        'route' => 'tickets.index',
                        'icon' => 'check-circle',
                        'key' => 'closed',
                        'params' => ['status' => 'closed']
                    ]
                ]
            ]
        ]
    ],
    'assets' => [
        'title' => 'Asset Management',
        'icon' => 'computer-desktop',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Overview',
                        'route' => 'assets.index',
                        'icon' => 'home',
                        'key' => 'overview'
                    ],
                    [
                        'name' => 'Add New Asset',
                        'route' => 'assets.create',
                        'icon' => 'plus',
                        'key' => 'create'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'CATEGORIES',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Hardware',
                        'route' => 'assets.index',
                        'icon' => 'computer-desktop',
                        'key' => 'hardware',
                        'params' => ['category' => 'hardware']
                    ],
                    [
                        'name' => 'Software',
                        'route' => 'assets.index',
                        'icon' => 'code-bracket',
                        'key' => 'software',
                        'params' => ['category' => 'software']
                    ],
                    [
                        'name' => 'Mobile Devices',
                        'route' => 'assets.index',
                        'icon' => 'device-phone-mobile',
                        'key' => 'mobile',
                        'params' => ['category' => 'mobile']
                    ]
                ]
            ]
        ]
    ],
    'financial' => [
        'title' => 'Financial Management',
        'icon' => 'currency-dollar',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Financial Overview',
                        'route' => 'financial.dashboard',
                        'icon' => 'chart-bar-square',
                        'key' => 'overview'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'CONTRACTS',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'All Contracts',
                        'route' => 'financial.contracts.index',
                        'icon' => 'document-check',
                        'key' => 'contracts'
                    ],
                    [
                        'name' => 'Create Contract',
                        'route' => 'financial.contracts.create',
                        'icon' => 'plus',
                        'key' => 'create-contract'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'INVOICING',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'All Invoices',
                        'route' => 'financial.invoices.index',
                        'icon' => 'document-text',
                        'key' => 'invoices'
                    ],
                    [
                        'name' => 'Create Invoice',
                        'route' => 'financial.invoices.create',
                        'icon' => 'plus',
                        'key' => 'create-invoice'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'PAYMENTS',
                'expandable' => true,
                'default_expanded' => false,
                'items' => [
                    [
                        'name' => 'All Payments',
                        'route' => 'financial.payments.index',
                        'icon' => 'credit-card',
                        'key' => 'payments'
                    ],
                    [
                        'name' => 'Record Payment',
                        'route' => 'financial.payments.create',
                        'icon' => 'plus-circle',
                        'key' => 'create-payment'
                    ]
                ]
            ]
        ]
    ],
    'projects' => [
        'title' => 'Project Management',
        'icon' => 'folder',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Project Overview',
                        'route' => 'projects.index',
                        'icon' => 'home',
                        'key' => 'overview'
                    ],
                    [
                        'name' => 'Create Project',
                        'route' => 'projects.create',
                        'icon' => 'plus',
                        'key' => 'create'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'PROJECT STATUS',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Active Projects',
                        'route' => 'projects.index',
                        'icon' => 'play',
                        'key' => 'active',
                        'params' => ['status' => 'active']
                    ],
                    [
                        'name' => 'Completed Projects',
                        'route' => 'projects.index',
                        'icon' => 'check-circle',
                        'key' => 'completed',
                        'params' => ['status' => 'completed']
                    ],
                    [
                        'name' => 'On Hold',
                        'route' => 'projects.index',
                        'icon' => 'pause',
                        'key' => 'on-hold',
                        'params' => ['status' => 'on_hold']
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'VIEWS',
                'expandable' => true,
                'default_expanded' => false,
                'items' => [
                    [
                        'name' => 'Timeline View',
                        'route' => 'projects.timeline',
                        'icon' => 'calendar-days',
                        'key' => 'timeline'
                    ],
                    [
                        'name' => 'Kanban Board',
                        'route' => 'projects.kanban',
                        'icon' => 'squares-2x2',
                        'key' => 'kanban'
                    ]
                ]
            ]
        ]
    ],
    'reports' => [
        'title' => 'Reports & Analytics',
        'icon' => 'chart-bar',
        'sections' => [
            [
                'type' => 'primary',
                'items' => [
                    [
                        'name' => 'Reports Overview',
                        'route' => 'reports.index',
                        'icon' => 'home',
                        'key' => 'overview'
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'FINANCIAL REPORTS',
                'expandable' => true,
                'default_expanded' => true,
                'items' => [
                    [
                        'name' => 'Revenue Reports',
                        'route' => 'reports.financial',
                        'icon' => 'currency-dollar',
                        'key' => 'revenue',
                        'params' => ['type' => 'revenue']
                    ],
                    [
                        'name' => 'Invoice Reports',
                        'route' => 'reports.financial',
                        'icon' => 'document-text',
                        'key' => 'invoices',
                        'params' => ['type' => 'invoices']
                    ],
                    [
                        'name' => 'Payment Reports',
                        'route' => 'reports.financial',
                        'icon' => 'credit-card',
                        'key' => 'payments',
                        'params' => ['type' => 'payments']
                    ]
                ]
            ],
            [
                'type' => 'section',
                'title' => 'OPERATIONAL REPORTS',
                'expandable' => true,
                'default_expanded' => false,
                'items' => [
                    [
                        'name' => 'Ticket Reports',
                        'route' => 'reports.tickets',
                        'icon' => 'ticket',
                        'key' => 'tickets'
                    ],
                    [
                        'name' => 'Asset Reports',
                        'route' => 'reports.assets',
                        'icon' => 'computer-desktop',
                        'key' => 'assets'
                    ],
                    [
                        'name' => 'Client Reports',
                        'route' => 'reports.clients',
                        'icon' => 'users',
                        'key' => 'clients'
                    ]
                ]
            ]
        ]
    ]
];

$currentSidebar = $sidebarConfig[$activeDomain] ?? null;
$selectedClient = \App\Services\NavigationService::getSelectedClient();
@endphp

@if($currentSidebar)
    <div class="{{ $mobile ? 'w-full' : 'w-64' }} h-full flex flex-col bg-white dark:bg-zinc-900 {{ !$mobile ? 'border-r border-zinc-200 dark:border-zinc-700' : '' }}">
        
        <!-- Enhanced Sidebar Header -->
        <div class="flex-shrink-0 px-4 py-4 border-b border-zinc-200 dark:border-zinc-700 bg-gradient-to-r from-indigo-50 to-blue-50 dark:from-zinc-800 dark:to-zinc-900">
            <div class="flex items-center space-x-3">
                <div class="flex-shrink-0">
                    <flux:icon name="{{ $currentSidebar['icon'] }}" class="w-6 h-6 text-indigo-600 dark:text-indigo-400" />
                </div>
                <div class="flex-1 min-w-0">
                    <flux:heading size="sm" class="text-zinc-900 dark:text-zinc-100 truncate">
                        {{ $currentSidebar['title'] }}
                    </flux:heading>
                    @if($selectedClient)
                        <flux:text size="xs" class="text-zinc-600 dark:text-zinc-400 truncate">
                            {{ $selectedClient->display_name }}
                        </flux:text>
                    @endif
                </div>
                <div class="flex-shrink-0">
                    <div class="w-2 h-2 bg-gradient-to-r from-indigo-500 to-blue-500 rounded-full animate-pulse"></div>
                </div>
            </div>
        </div>

        <!-- Quick Search (Phase 3 Enhancement) -->
        <div class="flex-shrink-0 p-3 border-b border-zinc-100 dark:border-zinc-800">
            <div class="relative">
                <flux:input 
                    type="search" 
                    placeholder="Search navigation..."
                    class="w-full text-sm"
                    x-data="{ searchTerm: '' }"
                    x-model="searchTerm"
                    x-on:input="filterNavItems($event.target.value)"
                />
                <flux:icon name="magnifying-glass" class="absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 text-zinc-400" />
            </div>
        </div>

        <!-- Navigation Content -->
        <div class="flex-1 overflow-y-auto {{ $mobile ? 'pb-4' : '' }}" x-data="navigationSearch()">
            <flux:navlist class="p-2 space-y-1 {{ $mobile ? 'space-y-2' : '' }}">
                @foreach($currentSidebar['sections'] as $sectionIndex => $section)
                    
                    @if($section['type'] === 'primary')
                        <!-- Primary navigation items (no grouping) -->
                        @foreach($section['items'] as $item)
                            @php
                                $isActive = $activeItem === $item['key'];
                                $routeParams = $resolveContextualParams($item['params'] ?? [], $selectedClient);
                                $badgeData = $calculateBadgeData($item, $selectedClient);
                            @endphp
                            
                            <flux:navlist.item 
                                href="{{ route($item['route'], $routeParams) }}" 
                                :current="$isActive"
                                icon="{{ $item['icon'] }}"
                                @if($badgeData['count'] > 0)
                                    badge="{{ $badgeData['count'] > 99 ? '99+' : $badgeData['count'] }}"
                                    badge:color="{{ $badgeData['variant'] }}"
                                @endif
                                class="font-medium {{ $mobile ? 'py-3 text-base' : '' }}"
                            >
                                {{ $item['name'] }}
                            </flux:navlist.item>
                        @endforeach
                        
                        @if(!$loop->last)
                            <flux:separator variant="subtle" class="my-3" />
                        @endif
                        
                    @elseif($section['type'] === 'section')
                        <!-- Section groups -->
                        @php
                            $isExpandable = $section['expandable'] ?? true;
                            $isDefaultExpanded = $section['default_expanded'] ?? true;
                            $isPriority = $section['priority'] ?? false;
                        @endphp
                        
                        <flux:navlist.group 
                            heading="{{ $section['title'] }}" 
                            @if($isExpandable) expandable @endif
                            @if($isExpandable) :expanded="{{ $isDefaultExpanded ? 'true' : 'false' }}" @endif
                            class="{{ $isPriority ? 'priority-section' : '' }}"
                        >
                            @foreach($section['items'] as $item)
                                @php
                                    $isActive = $activeItem === $item['key'];
                                    $routeParams = $resolveContextualParams($item['params'] ?? [], $selectedClient);
                                    $badgeData = $calculateBadgeData($item, $selectedClient);
                                    $shouldDisplay = $shouldDisplayItem($item, $selectedClient);
                                @endphp
                                
                                @if($shouldDisplay)
                                    <flux:navlist.item 
                                        href="{{ route($item['route'], $routeParams) }}" 
                                        :current="$isActive"
                                        icon="{{ $item['icon'] }}"
                                        @if($badgeData['count'] > 0)
                                            badge="{{ $badgeData['count'] > 99 ? '99+' : $badgeData['count'] }}"
                                            badge:color="{{ $badgeData['variant'] }}"
                                        @endif
                                        @if($item['description'] ?? false)
                                            title="{{ $item['description'] }}"
                                        @endif
                                        class="{{ $mobile ? 'py-2 text-base min-h-[44px]' : '' }}"
                                    >
                                        {{ $item['name'] }}
                                    </flux:navlist.item>
                                @endif
                            @endforeach
                        </flux:navlist.group>
                    
                    @endif
                @endforeach
            </flux:navlist>
        </div>

        <!-- Enhanced Footer -->
        <div class="flex-shrink-0 border-t border-zinc-200 dark:border-zinc-700 p-4">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-2">
                    <div class="w-2 h-2 bg-gradient-to-r from-green-400 to-blue-500 rounded-full"></div>
                    <flux:text size="xs" class="text-zinc-600 dark:text-zinc-400 font-medium">
                        {{ ucfirst($activeDomain) }} Module
                    </flux:text>
                </div>
                <flux:text size="xs" class="text-zinc-500 dark:text-zinc-500">
                    {{ now()->format('H:i') }}
                </flux:text>
            </div>
        </div>
    </div>

    @push('styles')
    <style>
        .priority-section {
            position: sticky;
            top: 0;
            z-index: 10;
            background: linear-gradient(to right, rgb(254 242 242), rgb(255 247 247));
            border-left: 4px solid rgb(239 68 68);
            border-radius: 0 0.375rem 0.375rem 0;
            margin: 0.25rem 0;
            padding: 0.5rem;
        }
        
        .dark .priority-section {
            background: linear-gradient(to right, rgb(127 29 29 / 0.2), rgb(127 29 29 / 0.1));
            border-left-color: rgb(239 68 68);
        }

        .nav-item-hidden {
            display: none !important;
        }

        .nav-group-hidden {
            display: none !important;
        }

        .search-highlight {
            background: rgb(254 240 138);
            color: rgb(146 64 14);
            padding: 0.125rem 0.25rem;
            border-radius: 0.25rem;
            font-weight: 600;
        }

        .dark .search-highlight {
            background: rgb(146 64 14);
            color: rgb(254 240 138);
        }
    </style>
    @endpush

    @push('scripts')
    <script>
        function navigationSearch() {
            return {
                searchTerm: '',
                
                init() {
                    // Initialize search functionality
                    this.setupGlobalSearch();
                },

                setupGlobalSearch() {
                    // Global search function accessible from search input
                    window.filterNavItems = (searchTerm) => {
                        this.searchTerm = searchTerm.toLowerCase();
                        this.filterItems();
                    };
                },

                filterItems() {
                    const navItems = this.$el.querySelectorAll('[flux\\:navlist\\.item]');
                    const navGroups = this.$el.querySelectorAll('[flux\\:navlist\\.group]');
                    
                    if (!this.searchTerm) {
                        // Show all items when search is empty
                        navItems.forEach(item => item.classList.remove('nav-item-hidden'));
                        navGroups.forEach(group => group.classList.remove('nav-group-hidden'));
                        return;
                    }

                    navItems.forEach(item => {
                        const text = item.textContent.toLowerCase();
                        if (text.includes(this.searchTerm)) {
                            item.classList.remove('nav-item-hidden');
                            // Highlight matching text
                            this.highlightText(item, this.searchTerm);
                            // Ensure parent group is visible
                            const parentGroup = item.closest('[flux\\:navlist\\.group]');
                            if (parentGroup) {
                                parentGroup.classList.remove('nav-group-hidden');
                            }
                        } else {
                            item.classList.add('nav-item-hidden');
                        }
                    });

                    // Hide empty groups
                    navGroups.forEach(group => {
                        const visibleItems = group.querySelectorAll('[flux\\:navlist\\.item]:not(.nav-item-hidden)');
                        if (visibleItems.length === 0) {
                            group.classList.add('nav-group-hidden');
                        }
                    });
                },

                highlightText(element, searchTerm) {
                    // Simple text highlighting - in a real implementation you'd want more sophisticated highlighting
                    // This is a basic version for demonstration
                    const text = element.textContent;
                    const highlightedText = text.replace(
                        new RegExp(searchTerm, 'gi'),
                        (match) => `<span class="search-highlight">${match}</span>`
                    );
                    
                    // Only update if we have highlights to show
                    if (highlightedText !== text) {
                        const textElement = element.querySelector('span:last-child') || element;
                        if (textElement && textElement.innerHTML !== highlightedText) {
                            textElement.innerHTML = highlightedText;
                        }
                    }
                }
            };
        }
    </script>
    @endpush
@endif

@php
// Use component helper methods
$resolveContextualParams = function($params, $selectedClient) {
    $resolvedParams = [];
    foreach ($params as $key => $value) {
        if ($value === 'current' && $selectedClient) {
            $resolvedParams[$key] = $selectedClient->id;
        } else {
            $resolvedParams[$key] = $value;
        }
    }
    return $resolvedParams;
};

$calculateBadgeData = function($item, $selectedClient) {
    $count = 0;
    $variant = 'zinc';
    
    if (!$selectedClient) {
        return ['count' => $count, 'variant' => $variant];
    }
    
    $badgeType = $item['badge_type'] ?? 'info';
    
    try {
        switch ($item['key']) {
            case 'open-tickets':
                $count = $selectedClient->tickets()->whereIn('status', ['open', 'in-progress'])->count();
                $variant = 'red';
                break;
            case 'pending':
                $count = $selectedClient->invoices()->where('status', 'overdue')->count();
                $variant = 'amber';
                break;
            case 'contacts':
                $count = $selectedClient->contacts()->count();
                break;
            case 'locations':
                $count = $selectedClient->locations()->count();
                break;
            case 'tickets':
                $count = $selectedClient->tickets()->whereIn('status', ['open', 'in-progress'])->count();
                break;
            case 'assets':
                $count = $selectedClient->assets()->count();
                break;
            case 'invoices':
                $count = $selectedClient->invoices()->whereIn('status', ['draft', 'sent'])->count();
                break;
        }
    } catch (\Exception $e) {
        // Graceful fallback if relationship doesn't exist
        $count = 0;
    }
    
    $variant = match($badgeType) {
        'urgent' => 'red',
        'warning' => 'amber',
        'success' => 'green',
        'info' => 'blue',
        default => 'zinc'
    };
    
    return ['count' => $count, 'variant' => $variant];
};

$shouldDisplayItem = function($item, $selectedClient) {
    if (!isset($item['show_if'])) {
        return true;
    }
    
    if (!$selectedClient) {
        return false;
    }
    
    $condition = $item['show_if'];
    
    try {
        switch ($condition) {
            case 'has_open_tickets':
                return $selectedClient->tickets()->whereIn('status', ['open', 'in-progress'])->exists();
            case 'has_pending_items':
                return $selectedClient->invoices()->where('status', 'overdue')->exists() ||
                       $selectedClient->invoices()->where('status', 'draft')->exists();
            case 'has_assets':
                return $selectedClient->assets()->count() > 0;
            default:
                return true;
        }
    } catch (\Exception $e) {
        return false;
    }
};
@endphp