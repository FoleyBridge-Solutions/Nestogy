@extends('layouts.app')

@section('title', 'Asset Check-In/Out Management')

@php
    $breadcrumbs = [
        ['name' => 'Assets', 'route' => 'assets.index'],
        ['name' => 'Check-In/Out Management', 'active' => true]
    ];
@endphp

@section('content')
<div class="max-w-7xl mx-auto px-6 sm:px-6 lg:px-8 py-6" x-data="assetCheckinout()">
    <!-- Page Header -->
    <div class="mb-8">
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Asset Check-In/Out Management</h1>
                <p class="mt-2 text-sm text-gray-600 dark:text-gray-300">Manage asset assignments and track check-in/out operations</p>
            </div>
            <div class="flex items-center space-x-3">
                <button @click="refreshData()" 
                        class="inline-flex items-center px-6 py-2 bg-gray-600 dark:bg-gray-700 text-white text-sm font-medium rounded-lg shadow-sm hover:bg-gray-700 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors duration-200">
                    <i class="fas fa-refresh mr-2" :class="{ 'animate-spin': loading }"></i>
                    Refresh
                </button>
                <a href="{{ route('assets.index') }}" 
                   class="inline-flex items-center px-6 py-2 bg-blue-600 dark:bg-blue-700 text-white text-sm font-medium rounded-lg shadow-sm hover:bg-blue-700 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200">
                    <i class="fas fa-list mr-2"></i>
                    View All Assets
                </a>
            </div>
        </div>
    </div>

    <!-- Status Overview Cards -->
    <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-8">
        <!-- Available Assets -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden cursor-pointer transform hover:scale-105 transition-transform duration-200"
             @click="filterByStatus('Ready To Deploy')">
            <div class="p-6">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center">
                            <i class="fas fa-check-circle text-xl text-green-600 dark:text-green-400"></i>
                        </div>
                    </div>
                    <div class="ml-4 flex-1">
                        <h3 class="text-sm font-medium text-gray-900 dark:text-white mb-1">Available Assets</h3>
                        <div class="text-2xl font-bold text-gray-900 dark:text-white" x-text="analytics.available_assets || 0"></div>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Ready to deploy</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Checked Out Assets -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden cursor-pointer transform hover:scale-105 transition-transform duration-200"
             @click="filterByStatus('Deployed')">
            <div class="p-6">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center">
                            <i class="fas fa-arrow-circle-right text-xl text-blue-600 dark:text-blue-400"></i>
                        </div>
                    </div>
                    <div class="ml-4 flex-1">
                        <h3 class="text-sm font-medium text-gray-900 dark:text-white mb-1">Checked Out</h3>
                        <div class="text-2xl font-bold text-gray-900 dark:text-white" x-text="analytics.deployed_assets || 0"></div>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Currently assigned</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total Assets -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
            <div class="p-6">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center">
                            <i class="fas fa-boxes text-xl text-gray-600 dark:text-gray-400"></i>
                        </div>
                    </div>
                    <div class="ml-4 flex-1">
                        <h3 class="text-sm font-medium text-gray-900 dark:text-white mb-1">Total Assets</h3>
                        <div class="text-2xl font-bold text-gray-900 dark:text-white" x-text="analytics.total_assets || 0"></div>
                        <p class="text-xs text-gray-500 dark:text-gray-400">All assets</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Utilization Rate -->
        <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
            <div class="p-6">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <div class="w-12 h-12 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center">
                            <i class="fas fa-chart-pie text-xl text-purple-600 dark:text-purple-400"></i>
                        </div>
                    </div>
                    <div class="ml-4 flex-1">
                        <h3 class="text-sm font-medium text-gray-900 dark:text-white mb-1">Utilization</h3>
                        <div class="text-2xl font-bold text-gray-900 dark:text-white">
                            <span x-text="Math.round(((analytics.deployed_assets || 0) / Math.max(analytics.total_assets || 1, 1)) * 100)"></span>%
                        </div>
                        <p class="text-xs text-gray-500 dark:text-gray-400">Assets in use</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Actions -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 mb-8">
        <div class="p-6">
            <div class="flex flex-flex-1 px-6 lg:flex-flex flex-wrap -mx-4 lg:items-center lg:justify-between space-y-4 lg:space-y-0">
                <div class="flex flex-flex-1 px-6 sm:flex-flex flex-wrap -mx-4 space-y-3 sm:space-y-0 sm:space-x-4">
                    <!-- Status Filter -->
                    <select x-model="filters.status" @change="loadAssets()" 
                            class="block w-full sm:w-auto px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                        <option value="">All Statuses</option>
                        <option value="Ready To Deploy">Available</option>
                        <option value="Deployed">Checked Out</option>
                        @foreach(\App\Models\Asset::STATUSES as $status)
                            <option value="{{ $status }}">{{ $status }}</option>
                        @endforeach
                    </select>

                    <!-- Type Filter -->
                    <select x-model="filters.type" @change="loadAssets()" 
                            class="block w-full sm:w-auto px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                        <option value="">All Types</option>
                        @foreach(\App\Models\Asset::TYPES as $type)
                            <option value="{{ $type }}">{{ $type }}</option>
                        @endforeach
                    </select>

                    <!-- Client Filter -->
                    <select x-model="filters.client_id" @change="loadAssets()" 
                            class="block w-full sm:w-auto px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                        <option value="">All Clients</option>
                        @foreach($clients as $client)
                            <option value="{{ $client->id }}">{{ $client->name }}</option>
                        @endforeach
                    </select>

                    <!-- Location Filter -->
                    <select x-model="filters.location_id" @change="loadAssets()" 
                            class="block w-full sm:w-auto px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                        <option value="">All Locations</option>
                        @foreach($locations as $location)
                            <option value="{{ $location->id }}">{{ $location->name }}</option>
                        @endforeach
                    </select>
                </div>

                <!-- Bulk Actions -->
                <div class="flex items-center space-x-3">
                    <div x-show="selectedAssets.length > 0" x-transition class="flex items-center space-x-3">
                        <span class="text-sm text-gray-600 dark:text-gray-400">
                            <span x-text="selectedAssets.length"></span> selected
                        </span>
                        
                        <select x-model="bulkContactId" x-show="bulkAction === 'check_out'" 
                                class="block px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 text-sm bg-white dark:bg-gray-700 text-gray-900 dark:text-white">
                            <option value="">Select Contact (Optional)</option>
                            @foreach($contacts as $contact)
                                <option value="{{ $contact->id }}">{{ $contact->name }}</option>
                            @endforeach
                        </select>
                        
                        <button @click="performBulkAction('check_out')" 
                                :disabled="!canBulkCheckOut"
                                class="inline-flex items-center px-6 py-2 bg-blue-600 dark:bg-blue-700 text-white text-sm font-medium rounded-lg shadow-sm hover:bg-blue-700 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200">
                            <i class="fas fa-sign-out-alt mr-2"></i>
                            Check Out
                        </button>
                        
                        <button @click="performBulkAction('check_in')" 
                                :disabled="!canBulkCheckIn"
                                class="inline-flex items-center px-6 py-2 bg-green-600 dark:bg-green-700 text-white text-sm font-medium rounded-lg shadow-sm hover:bg-green-700 dark:hover:bg-green-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200">
                            <i class="fas fa-sign-in-alt mr-2"></i>
                            Check In
                        </button>
                    </div>
                    
                    <button @click="clearSelection()" x-show="selectedAssets.length > 0" x-transition
                            class="inline-flex items-center px-6 py-2 bg-gray-600 dark:bg-gray-700 text-white text-sm font-medium rounded-lg shadow-sm hover:bg-gray-700 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors duration-200">
                        <i class="fas fa-times mr-2"></i>
                        Clear
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Asset List -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden mb-8">
        <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Asset Management</h3>
        </div>
        
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-900">
                    <tr>
                        <th scope="col" class="relative px-6 py-6 text-left">
                            <input type="checkbox" @change="toggleAllAssets($event)" 
                                   :checked="selectedAssets.length === filteredAssets.length && filteredAssets.length > 0"
                                   class="h-4 w-4 text-blue-600 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500">
                        </th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Asset</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">RMM</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Client</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Assigned To</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Serial</th>
                        <th scope="col" class="px-6 py-6 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    <template x-for="asset in filteredAssets" :key="asset.id">
                        <tr class="hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200">
                            <td class="px-6 py-6 whitespace-nowrap">
                                <input type="checkbox" :value="asset.id" @change="toggleAssetSelection(asset.id, $event)" 
                                       :checked="selectedAssets.includes(asset.id)"
                                       class="h-4 w-4 text-blue-600 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500">
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap">
                                <div class="flex items-center">
                                    <i :class="getAssetIcon(asset.type)" class="text-gray-400 mr-3"></i>
                                    <div>
                                        <div class="text-sm font-medium text-gray-900 dark:text-white" x-text="asset.name"></div>
                                        <div class="text-sm text-gray-500 dark:text-gray-400" x-text="asset.type"></div>
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap">
                                <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full" 
                                      :class="getStatusClass(asset.status_color)"
                                      x-text="asset.status"></span>
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap">
                                <div class="flex items-center space-x-1" x-show="asset.rmm_online !== undefined">
                                    <span class="w-2 h-2 rounded-full" :class="asset.rmm_online ? 'bg-green-400' : 'bg-red-400'"></span>
                                    <span class="text-xs text-gray-600 dark:text-gray-400" x-text="asset.rmm_online ? 'Online' : 'Offline'"></span>
                                </div>
                                <span x-show="asset.rmm_online === undefined" class="text-xs text-gray-400 dark:text-gray-500">-</span>
                            </td>
                            <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-900 dark:text-white" x-text="asset.client || '-'"></td>
                            <td class="px-6 py-6 whitespace-nowrap text-sm text-gray-900 dark:text-white" x-text="asset.contact || '-'"></td>
                            <td class="px-6 py-6 whitespace-nowrap text-sm font-mono text-gray-900 dark:text-white" x-text="asset.serial || '-'"></td>
                            <td class="px-6 py-6 whitespace-nowrap text-sm font-medium">
                                <div class="flex items-center space-x-2">
                                    <button x-show="asset.can_check_out" @click="checkOutAsset(asset.id)" 
                                            class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300">
                                        <i class="fas fa-sign-out-alt"></i>
                                    </button>
                                    <button x-show="asset.can_check_in" @click="checkInAsset(asset.id)" 
                                            class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300">
                                        <i class="fas fa-sign-in-alt"></i>
                                    </button>
                                    <a :href="`/assets/${asset.id}`" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-300">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    </template>
                    <tr x-show="filteredAssets.length === 0 && !loading">
                        <td colspan="8" class="px-6 py-12 text-center">
                            <div class="text-gray-500 dark:text-gray-400">
                                <i class="fas fa-inbox text-4xl mb-6"></i>
                                <p class="text-lg font-medium mb-2">No assets found</p>
                                <p class="text-sm">Try adjusting your filters or refresh the data.</p>
                            </div>
                        </td>
                    </tr>
                    <tr x-show="loading">
                        <td colspan="8" class="px-6 py-12 text-center">
                            <div class="text-gray-500 dark:text-gray-400">
                                <i class="fas fa-spinner fa-spin text-2xl mb-6"></i>
                                <p class="text-sm">Loading assets...</p>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
        <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Recent Activity</h3>
        </div>
        <div class="p-6">
            <div class="space-y-4">
                <template x-for="activity in recentActivity" :key="activity.id">
                    <div class="flex items-center space-x-4">
                        <div class="flex-shrink-0">
                            <div class="w-8 h-8 rounded-full flex items-center justify-center"
                                 :class="getActivityIcon(activity.action)">
                                <i :class="getActivityIconClass(activity.action)" class="text-sm"></i>
                            </div>
                        </div>
                        <div class="flex-1 min-w-0">
                            <p class="text-sm text-gray-900 dark:text-white">
                                <span class="font-medium" x-text="activity.name"></span>
                                <span x-text="activity.action === 'checked_out' ? 'was checked out' : activity.action === 'checked_in' ? 'was checked in' : 'was updated'"></span>
                                <span x-show="activity.contact" class="text-gray-500 dark:text-gray-400">
                                    to <span x-text="activity.contact"></span>
                                </span>
                            </p>
                            <p class="text-xs text-gray-500 dark:text-gray-400" x-text="formatDate(activity.updated_at)"></p>
                        </div>
                    </div>
                </template>
                <div x-show="recentActivity.length === 0" class="text-center text-gray-500 dark:text-gray-400 py-8">
                    <i class="fas fa-history text-2xl mb-2"></i>
                    <p class="text-sm">No recent activity</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function assetCheckinout() {
    return {
        loading: false,
        analytics: @json($analytics),
        recentActivity: @json($recentActivity),
        filteredAssets: [],
        selectedAssets: [],
        bulkContactId: '',
        filters: {
            status: '',
            type: '',
            client_id: '',
            location_id: ''
        },

        init() {
            this.loadAssets();
        },

        async loadAssets() {
            this.loading = true;
            try {
                const params = new URLSearchParams();
                Object.keys(this.filters).forEach(key => {
                    if (this.filters[key]) {
                        params.append(key, this.filters[key]);
                    }
                });

                const response = await fetch(`{{ route('assets.filter') }}?${params}`);
                const data = await response.json();
                this.filteredAssets = data;
                this.selectedAssets = [];
            } catch (error) {
                console.error('Failed to load assets:', error);
                this.showNotification('Failed to load assets', 'error');
            } finally {
                this.loading = false;
            }
        },

        async refreshData() {
            this.loading = true;
            try {
                // Refresh analytics
                const analyticsResponse = await fetch(`{{ route('assets.metrics') }}`);
                this.analytics = await analyticsResponse.json();
                
                // Reload assets
                await this.loadAssets();
                
                this.showNotification('Data refreshed successfully', 'success');
            } catch (error) {
                console.error('Failed to refresh data:', error);
                this.showNotification('Failed to refresh data', 'error');
            } finally {
                this.loading = false;
            }
        },

        filterByStatus(status) {
            this.filters.status = status;
            this.loadAssets();
        },

        toggleAssetSelection(assetId, event) {
            if (event.target.checked) {
                this.selectedAssets.push(assetId);
            } else {
                this.selectedAssets = this.selectedAssets.filter(id => id !== assetId);
            }
        },

        toggleAllAssets(event) {
            if (event.target.checked) {
                this.selectedAssets = this.filteredAssets.map(asset => asset.id);
            } else {
                this.selectedAssets = [];
            }
        },

        clearSelection() {
            this.selectedAssets = [];
        },

        get canBulkCheckOut() {
            return this.selectedAssets.some(id => {
                const asset = this.filteredAssets.find(a => a.id === id);
                return asset && asset.can_check_out;
            });
        },

        get canBulkCheckIn() {
            return this.selectedAssets.some(id => {
                const asset = this.filteredAssets.find(a => a.id === id);
                return asset && asset.can_check_in;
            });
        },

        async performBulkAction(action) {
            if (this.selectedAssets.length === 0) return;

            this.loading = true;
            try {
                const response = await fetch(`{{ route('assets.bulk-checkinout') }}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    },
                    body: JSON.stringify({
                        action: action,
                        asset_ids: this.selectedAssets,
                        contact_id: action === 'check_out' ? this.bulkContactId : null
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    this.showNotification(data.message, 'success');
                    this.selectedAssets = [];
                    this.bulkContactId = '';
                    await this.refreshData();
                } else {
                    this.showNotification('Operation failed', 'error');
                }
            } catch (error) {
                console.error('Bulk operation failed:', error);
                this.showNotification('Operation failed', 'error');
            } finally {
                this.loading = false;
            }
        },

        async checkOutAsset(assetId) {
            await this.performSingleAction(assetId, 'check_out');
        },

        async checkInAsset(assetId) {
            await this.performSingleAction(assetId, 'check_in');
        },

        async performSingleAction(assetId, action) {
            this.loading = true;
            try {
                const response = await fetch(`{{ route('assets.bulk-checkinout') }}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    },
                    body: JSON.stringify({
                        action: action,
                        asset_ids: [assetId]
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    this.showNotification(`Asset ${action === 'check_out' ? 'checked out' : 'checked in'} successfully`, 'success');
                    await this.refreshData();
                } else {
                    this.showNotification('Operation failed', 'error');
                }
            } catch (error) {
                console.error('Single action failed:', error);
                this.showNotification('Operation failed', 'error');
            } finally {
                this.loading = false;
            }
        },

        getAssetIcon(type) {
            const icons = {
                'Server': 'fas fa-server',
                'Desktop': 'fas fa-desktop',
                'Laptop': 'fas fa-laptop',
                'Tablet': 'fas fa-tablet',
                'Phone': 'fas fa-mobile',
                'Printer': 'fas fa-print',
                'Switch': 'fas fa-network-wired',
                'Router': 'fas fa-route',
                'Firewall': 'fas fa-shield-alt',
                'Access Point': 'fas fa-wifi'
            };
            return icons[type] || 'fas fa-cube';
        },

        getStatusClass(statusColor) {
            const classes = {
                'success': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
                'primary': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
                'warning': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
                'danger': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200',
                'secondary': 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200'
            };
            return classes[statusColor] || classes['secondary'];
        },

        getActivityIcon(action) {
            if (action === 'checked_out') return 'bg-blue-100 dark:bg-blue-900';
            if (action === 'checked_in') return 'bg-green-100 dark:bg-green-900';
            return 'bg-gray-100 dark:bg-gray-700';
        },

        getActivityIconClass(action) {
            if (action === 'checked_out') return 'fas fa-sign-out-alt text-blue-600 dark:text-blue-400';
            if (action === 'checked_in') return 'fas fa-sign-in-alt text-green-600 dark:text-green-400';
            return 'fas fa-edit text-gray-600 dark:text-gray-400';
        },

        formatDate(dateString) {
            return new Date(dateString).toLocaleString();
        },

        showNotification(message, type = 'success') {
            // Simple notification - you can replace this with a more sophisticated system
            const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 ${bgColor} text-white px-6 py-3 rounded-lg shadow-lg z-50`;
            notification.textContent = message;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    }
}
</script>
@endsection