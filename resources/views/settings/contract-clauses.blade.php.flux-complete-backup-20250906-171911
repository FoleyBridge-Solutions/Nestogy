@extends('layouts.settings')

@section('title', 'Contract Clauses - Settings - Nestogy')

@section('settings-title', 'Contract Clauses')
@section('settings-description', 'Manage reusable contract clauses for building dynamic contracts')

@section('settings-actions')
<button onclick="document.getElementById('createClauseModal').style.display = 'block'" 
        class="inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
    </svg>
    Create Clause
</button>
@endsection

@push('scripts')
<script>
    // Pass server data to JavaScript
    window.userIsSuperAdmin = {{ Auth::user()->hasRole('super-admin') ? 'true' : 'false' }};
    window.csrfToken = '{{ csrf_token() }}';
    
    // Contract clauses Alpine.js component
    window.contractClauses = function() {
        return {
            viewMode: 'information',
            showCreateModal: false,
            bulkSelection: [],
            showBulkActions: false,
            editingClause: null,
            editingContent: '',
            
            init() {
                console.log('Contract clauses initialized');
            },
            
            startEditing(clause) {
                if (clause.is_system && !window.userIsSuperAdmin) {
                    alert('System clauses cannot be edited.');
                    return;
                }
                this.editingClause = clause.id;
                this.editingContent = clause.content;
                
                this.$nextTick(() => {
                    const textarea = this.$refs['content-' + clause.id];
                    if (textarea) {
                        textarea.focus();
                        this.autoResize(textarea);
                    }
                });
            },
            
            cancelEditing() {
                this.editingClause = null;
                this.editingContent = '';
            },
            
            async saveContent(clause) {
                if (this.editingContent.trim() === '') {
                    alert('Content cannot be empty.');
                    return;
                }
                
                try {
                    const response = await fetch('/settings/contract-clauses/' + clause.id + '/update-content', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': window.csrfToken,
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({
                            content: this.editingContent
                        })
                    });
                    
                    if (response.ok) {
                        // Update the clause content locally
                        clause.content = this.editingContent;
                        this.editingClause = null;
                        this.editingContent = '';
                        alert('Clause updated successfully!');
                        location.reload();
                    } else {
                        throw new Error('Failed to save');
                    }
                } catch (error) {
                    alert('Failed to save changes. Please try again.');
                }
            },
            
            autoResize(textarea) {
                textarea.style.height = 'auto';
                textarea.style.height = textarea.scrollHeight + 'px';
            },
            
            autoResizeTextarea(event) {
                this.autoResize(event.target);
            }
        };
    };
    
    // Handle escape key to cancel editing
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            window.dispatchEvent(new CustomEvent('cancel-editing'));
        }
    });
</script>
@endpush

@section('settings-content')
<div x-data="contractClauses()">

    <!-- Statistics Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                        <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Total Clauses</p>
                    <p class="text-2xl font-bold text-gray-900 dark:text-white">{{ number_format($stats['total']) }}</p>
                </div>
            </div>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                        <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Active Clauses</p>
                    <p class="text-2xl font-bold text-gray-900 dark:text-white">{{ number_format($stats['active']) }}</p>
                </div>
            </div>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                        <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">System Clauses</p>
                    <p class="text-2xl font-bold text-gray-900 dark:text-white">{{ number_format($stats['system']) }}</p>
                </div>
            </div>
        </div>

        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">
            <div class="flex items-center">
                <div class="flex-shrink-0">
                    <div class="w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center">
                        <svg class="w-4 h-4 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </div>
                </div>
                <div class="ml-4">
                    <p class="text-sm font-medium text-gray-600 dark:text-gray-400">User Created</p>
                    <p class="text-2xl font-bold text-gray-900 dark:text-white">{{ number_format($stats['user_created']) }}</p>
                </div>
            </div>
        </div>
    </div>

    <!-- View Toggle -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm mb-6">
        <div class="p-4 border-b border-gray-200 dark:border-gray-700">
            <div class="flex items-center justify-between">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">Contract Clauses</h3>
                <div class="flex items-center bg-gray-100 dark:bg-gray-700 rounded-lg p-1">
                    <button @click="viewMode = 'information'" 
                            :class="viewMode === 'information' ? 'bg-white dark:bg-gray-800 text-blue-600 dark:text-blue-400 shadow-sm' : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'"
                            class="px-3 py-1.5 text-sm font-medium rounded-md transition-colors">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path>
                        </svg>
                        Information View
                    </button>
                    <button @click="viewMode = 'content'" 
                            :class="viewMode === 'content' ? 'bg-white dark:bg-gray-800 text-blue-600 dark:text-blue-400 shadow-sm' : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'"
                            class="px-3 py-1.5 text-sm font-medium rounded-md transition-colors">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        Content View
                    </button>
                </div>
            </div>
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-2">
                <span x-show="viewMode === 'information'">View clause metadata, categories, and management information</span>
                <span x-show="viewMode === 'content'">Focus on clause content with inline editing capabilities</span>
            </p>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm mb-6">
        <div class="p-6">
            <form method="GET" action="{{ route('settings.contract-clauses') }}" class="space-y-4 md:space-y-0 md:flex md:items-end md:space-x-4">
                <div class="flex-1">
                    <label for="search" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Search</label>
                    <input type="text" name="search" id="search" value="{{ request('search') }}" 
                           placeholder="Search by name, description, or content..."
                           class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                </div>
                
                <div class="min-w-0 flex-1 md:max-w-xs">
                    <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Category</label>
                    <select name="category" id="category" class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                        <option value="all" {{ request('category') == 'all' ? 'selected' : '' }}>All Categories</option>
                        @foreach($categories as $key => $label)
                            <option value="{{ $key }}" {{ request('category') == $key ? 'selected' : '' }}>{{ $label }}</option>
                        @endforeach
                    </select>
                </div>
                
                <div class="min-w-0 flex-1 md:max-w-xs">
                    <label for="clause_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Type</label>
                    <select name="clause_type" id="clause_type" class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                        <option value="all" {{ request('clause_type') == 'all' ? 'selected' : '' }}>All Types</option>
                        @foreach($clauseTypes as $key => $label)
                            <option value="{{ $key }}" {{ request('clause_type') == $key ? 'selected' : '' }}>{{ $label }}</option>
                        @endforeach
                    </select>
                </div>
                
                <div class="min-w-0 flex-1 md:max-w-xs">
                    <label for="status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Status</label>
                    <select name="status" id="status" class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                        <option value="all" {{ request('status') == 'all' ? 'selected' : '' }}>All Statuses</option>
                        <option value="active" {{ request('status') == 'active' ? 'selected' : '' }}>Active</option>
                        <option value="inactive" {{ request('status') == 'inactive' ? 'selected' : '' }}>Inactive</option>
                        <option value="archived" {{ request('status') == 'archived' ? 'selected' : '' }}>Archived</option>
                    </select>
                </div>
                
                <div class="flex space-x-3">
                    <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                        Filter
                    </button>
                    <a href="{{ route('settings.contract-clauses') }}" class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Bulk Actions -->
    <div x-show="bulkSelection.length > 0" x-transition class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-700 rounded-lg p-4 mb-6">
        <div class="flex items-center justify-between">
            <div class="flex items-center">
                <span class="text-sm text-blue-700 dark:text-blue-300" x-text="`${bulkSelection.length} clause${bulkSelection.length === 1 ? '' : 's'} selected`"></span>
            </div>
            <div class="flex items-center space-x-3">
                <form action="{{ route('settings.contract-clauses.bulk-action') }}" method="POST" class="inline-flex space-x-2">
                    @csrf
                    <input type="hidden" name="clause_ids" :value="JSON.stringify(bulkSelection)">
                    <select name="action" class="rounded border-gray-300 dark:border-gray-600 dark:bg-gray-700 text-sm">
                        <option value="activate">Activate</option>
                        <option value="deactivate">Deactivate</option>
                        <option value="archive">Archive</option>
                        <option value="delete">Delete</option>
                    </select>
                    <button type="submit" class="inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded text-blue-700 dark:text-blue-300 bg-blue-100 dark:bg-blue-800 hover:bg-blue-200 dark:hover:bg-blue-700">
                        Apply
                    </button>
                </form>
                <button @click="bulkSelection = []" class="text-blue-700 dark:text-blue-300 hover:text-blue-900 dark:hover:text-blue-100 text-sm">
                    Clear Selection
                </button>
            </div>
        </div>
    </div>

    <!-- Information View - Clauses Table -->
    <div x-show="viewMode === 'information'" x-transition class="bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
                <thead class="bg-gray-50 dark:bg-gray-700">
                    <tr>
                        <th scope="col" class="relative w-12 px-6 sm:w-16 sm:px-8">
                            <input type="checkbox" 
                                   @change="bulkSelection = $event.target.checked ? {{ $clauses->pluck('id')->toJson() }} : []"
                                   class="absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Clause
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Category
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Type
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Status
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Variables
                        </th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
                            Updated
                        </th>
                        <th scope="col" class="relative px-6 py-3">
                            <span class="sr-only">Actions</span>
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                    @forelse($clauses as $clause)
                        <tr>
                            <td class="relative w-12 px-6 sm:w-16 sm:px-8">
                                <input type="checkbox" 
                                       :value="{{ $clause->id }}"
                                       x-model="bulkSelection"
                                       class="absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex items-start space-x-3">
                                    <div class="flex-shrink-0">
                                        @if($clause->is_system)
                                            <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                                                <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                                                </svg>
                                            </div>
                                        @else
                                            <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                                                <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                                </svg>
                                            </div>
                                        @endif
                                    </div>
                                    <div class="min-w-0 flex-1">
                                        <p class="text-sm font-medium text-gray-900 dark:text-white">{{ $clause->name }}</p>
                                        @if($clause->description)
                                            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{{ Str::limit($clause->description, 100) }}</p>
                                        @endif
                                        @if($clause->is_system)
                                            <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800 mt-2">
                                                System Clause
                                            </span>
                                        @endif
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
                                    {{ $categories[$clause->category] ?? ucfirst(str_replace('_', ' ', $clause->category)) }}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @php
                                    $typeColors = [
                                        'required' => 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',
                                        'conditional' => 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
                                        'optional' => 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
                                    ];
                                @endphp
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{ $typeColors[$clause->clause_type] ?? 'bg-gray-100 text-gray-800' }}">
                                    {{ $clauseTypes[$clause->clause_type] ?? ucfirst(str_replace('_', ' ', $clause->clause_type)) }}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                @php
                                    $statusColors = [
                                        'active' => 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
                                        'inactive' => 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',
                                        'archived' => 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
                                    ];
                                @endphp
                                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{ $statusColors[$clause->status] ?? 'bg-gray-100 text-gray-800' }}">
                                    {{ ucfirst($clause->status) }}
                                </span>
                            </td>
                            <td class="px-6 py-4">
                                @php
                                    $variables = $clause->extractVariables();
                                @endphp
                                @if(count($variables) > 0)
                                    <div class="flex flex-wrap gap-1">
                                        @foreach(array_slice($variables, 0, 3) as $variable)
                                            <span class="inline-flex items-center px-2 py-1 rounded text-xs font-mono bg-blue-50 text-blue-700 dark:bg-blue-900 dark:text-blue-300">
                                                {{ $variable }}
                                            </span>
                                        @endforeach
                                        @if(count($variables) > 3)
                                            <span class="text-xs text-gray-500 dark:text-gray-400">
                                                +{{ count($variables) - 3 }} more
                                            </span>
                                        @endif
                                    </div>
                                @else
                                    <span class="text-sm text-gray-400 dark:text-gray-500">No variables</span>
                                @endif
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                                {{ $clause->updated_at->diffForHumans() }}
                                @if($clause->updater)
                                    <br><span class="text-xs">by {{ $clause->updater->name }}</span>
                                @endif
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <div class="flex items-center justify-end space-x-2">
                                    
                                    <!-- Edit Button -->
                                    @if(!$clause->is_system || Auth::user()->hasRole('super-admin'))
                                        <button onclick="editClause({{ $clause->id }})" 
                                                class="text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300" title="Edit">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                            </svg>
                                        </button>
                                    @endif
                                    
                                    <!-- Duplicate Button -->
                                    <form action="{{ route('settings.contract-clauses.duplicate', $clause) }}" method="POST" class="inline">
                                        @csrf
                                        <button type="submit" class="text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300" title="Duplicate">
                                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                            </svg>
                                        </button>
                                    </form>
                                    
                                    <!-- Delete Button -->
                                    @if(!$clause->is_system || Auth::user()->hasRole('super-admin'))
                                        <form action="{{ route('settings.contract-clauses.destroy', $clause) }}" method="POST" class="inline" 
                                              onsubmit="return confirm('Are you sure you want to delete this clause?')">
                                            @csrf
                                            @method('DELETE')
                                            <button type="submit" class="text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300" title="Delete">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                            </button>
                                        </form>
                                    @endif
                                </div>
                            </td>
                        </tr>
                    @empty
                        <tr>
                            <td colspan="8" class="px-6 py-12 text-center text-sm text-gray-500 dark:text-gray-400">
                                <div class="flex flex-col items-center">
                                    <svg class="w-12 h-12 text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No contract clauses found</h3>
                                    <p class="text-gray-500 dark:text-gray-400 mb-6">Get started by creating your first contract clause.</p>
                                    <button onclick="document.getElementById('createClauseModal').style.display = 'block'" 
                                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                        </svg>
                                        Create Your First Clause
                                    </button>
                                </div>
                            </td>
                        </tr>
                    @endforelse
                </tbody>
            </table>
        </div>
        
        @if($clauses->hasPages())
            <div class="bg-white dark:bg-gray-800 px-4 py-3 border-t border-gray-200 dark:border-gray-700 sm:px-6">
                {{ $clauses->appends(request()->query())->links() }}
            </div>
        @endif
    </div>

    <!-- Content View - Card Layout -->
    <div x-show="viewMode === 'content'" x-transition class="space-y-4">
        @forelse($clauses as $clause)
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600 transition-colors"
                 data-clause-id="{{ $clause->id }}" 
                 data-clause="{{ $clause->toJson() }}"
                 x-data="{ clauseData: {{ $clause->toJson() }} }">
                
                <!-- Card Header -->
                <div class="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
                    <div class="flex items-center space-x-3">
                        <!-- Icon -->
                        <div class="flex-shrink-0">
                            @if($clause->is_system)
                                <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                                    <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                                    </svg>
                                </div>
                            @else
                                <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                                    <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                    </svg>
                                </div>
                            @endif
                        </div>
                        
                        <!-- Title and Metadata -->
                        <div class="min-w-0 flex-1">
                            <h3 class="text-lg font-medium text-gray-900 dark:text-white">{{ $clause->name }}</h3>
                            <div class="flex flex-wrap items-center gap-2 mt-1">
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
                                    {{ $categories[$clause->category] ?? ucfirst(str_replace('_', ' ', $clause->category)) }}
                                </span>
                                @php
                                    $statusColors = [
                                        'active' => 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',
                                        'inactive' => 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300',
                                        'archived' => 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',
                                    ];
                                @endphp
                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium {{ $statusColors[$clause->status] ?? 'bg-gray-100 text-gray-800' }}">
                                    {{ ucfirst($clause->status) }}
                                </span>
                                @if($clause->is_system)
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300">
                                        System
                                    </span>
                                @endif
                            </div>
                        </div>
                    </div>
                    
                    <!-- Actions -->
                    <div class="flex items-center space-x-2">
                        <!-- Variables Count -->
                        @php
                            $variables = $clause->extractVariables();
                        @endphp
                        @if(count($variables) > 0)
                            <span class="inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-blue-50 text-blue-700 dark:bg-blue-900 dark:text-blue-300" title="Variables: {{ implode(', ', $variables) }}">
                                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14"></path>
                                </svg>
                                {{ count($variables) }}
                            </span>
                        @endif
                        
                        <!-- Quick Actions -->
                        <div class="flex items-center space-x-1">
                            <!-- Duplicate -->
                            <form action="{{ route('settings.contract-clauses.duplicate', $clause) }}" method="POST" class="inline">
                                @csrf
                                <button type="submit" class="p-1.5 text-gray-400 hover:text-green-600 dark:hover:text-green-400 rounded" title="Duplicate">
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                    </svg>
                                </button>
                            </form>
                            
                            <!-- Delete -->
                            @if(!$clause->is_system || Auth::user()->hasRole('super-admin'))
                                <form action="{{ route('settings.contract-clauses.destroy', $clause) }}" method="POST" class="inline" 
                                      onsubmit="return confirm('Are you sure you want to delete this clause?')">
                                    @csrf
                                    @method('DELETE')
                                    <button type="submit" class="p-1.5 text-gray-400 hover:text-red-600 dark:hover:text-red-400 rounded" title="Delete">
                                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                    </button>
                                </form>
                            @endif
                        </div>
                    </div>
                </div>
                
                <!-- Card Content -->
                <div class="p-4">
                    <!-- Editing Mode -->
                    <div x-show="editingClause === {{ $clause->id }}" class="space-y-3">
                        <textarea x-ref="content-{{ $clause->id }}" 
                                  x-model="editingContent"
                                  @keydown.ctrl.enter="saveContent(clauseData)"
                                  @keydown.escape="cancelEditing()"
                                  @input="autoResizeTextarea($event)"
                                  rows="8"
                                  class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 font-mono text-sm resize-none"
                                  placeholder="Enter clause content..."></textarea>
                        <div class="flex items-center justify-between">
                            <p class="text-xs text-gray-500 dark:text-gray-400">
                                Use <code class="bg-gray-100 dark:bg-gray-800 px-1 rounded">@{{variable}}</code> for template variables. 
                                <kbd class="bg-gray-100 dark:bg-gray-800 px-1 rounded">Ctrl+Enter</kbd> to save, <kbd class="bg-gray-100 dark:bg-gray-800 px-1 rounded">Esc</kbd> to cancel.
                            </p>
                            <div class="flex items-center space-x-2">
                                <button @click="cancelEditing()" class="px-3 py-1 text-xs border border-gray-300 rounded text-gray-600 hover:bg-gray-50 dark:border-gray-600 dark:text-gray-400 dark:hover:bg-gray-700">
                                    Cancel
                                </button>
                                <button @click="saveContent(clauseData)" class="px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700">
                                    Save Changes
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Reading Mode -->
                    <div x-show="editingClause !== {{ $clause->id }}" 
                         @dblclick="startEditing(clauseData)"
                         class="group cursor-pointer">
                        <div class="prose prose-sm max-w-none dark:prose-invert">
                            <div class="relative p-4 bg-gray-50 dark:bg-gray-700 rounded-lg border-2 border-dashed border-gray-200 dark:border-gray-600 group-hover:border-blue-300 dark:group-hover:border-blue-600 transition-colors">
                                <!-- Double-click hint -->
                                <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                                    @if(!$clause->is_system || Auth::user()->hasRole('super-admin'))
                                        <span class="inline-flex items-center px-2 py-1 rounded text-xs bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300">
                                            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                            </svg>
                                            Double-click to edit
                                        </span>
                                    @endif
                                </div>
                                
                                <!-- Content with highlighting -->
                                <pre class="clause-content whitespace-pre-wrap text-sm text-gray-700 dark:text-gray-300 font-mono leading-relaxed">{{ $clause->content }}</pre>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Description -->
                    @if($clause->description)
                        <div class="mt-3 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                            <p class="text-sm text-blue-800 dark:text-blue-200">
                                <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                {{ $clause->description }}
                            </p>
                        </div>
                    @endif
                </div>
                
                <!-- Card Footer -->
                <div class="px-4 py-3 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                    <div class="flex items-center space-x-4">
                        <span>Updated {{ $clause->updated_at->diffForHumans() }}</span>
                        @if($clause->updater)
                            <span>by {{ $clause->updater->name }}</span>
                        @endif
                    </div>
                    <div class="flex items-center space-x-2">
                        @if(count($variables) > 0)
                            <div class="flex flex-wrap gap-1">
                                @foreach(array_slice($variables, 0, 3) as $variable)
                                    <span class="inline-flex items-center px-1.5 py-0.5 rounded text-xs font-mono bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300">
                                        {{ $variable }}
                                    </span>
                                @endforeach
                                @if(count($variables) > 3)
                                    <span class="text-xs">+{{ count($variables) - 3 }} more</span>
                                @endif
                            </div>
                        @endif
                    </div>
                </div>
            </div>
        @empty
            <div class="text-center py-12">
                <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
                <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No contract clauses found</h3>
                <p class="text-gray-500 dark:text-gray-400 mb-6">Get started by creating your first contract clause.</p>
                <button onclick="document.getElementById('createClauseModal').style.display = 'block'" 
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Create Your First Clause
                </button>
            </div>
        @endforelse
        
        @if($clauses->hasPages())
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm px-4 py-3 border border-gray-200 dark:border-gray-700">
                {{ $clauses->appends(request()->query())->links() }}
            </div>
        @endif
    </div>

</div>

<!-- Edit Clause Modal -->
<div id="editClauseModal" class="fixed inset-0 z-50 overflow-y-auto hidden">
    <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
        </div>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full sm:p-6">
            <form id="editClauseForm" method="POST">
                @csrf
                @method('PUT')
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white">Edit Contract Clause</h3>
                    <button type="button" onclick="closeEditModal()" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                    <div>
                        <label for="edit_name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Clause Name *</label>
                        <input type="text" name="name" id="edit_name" required 
                               class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    
                    <div>
                        <label for="edit_category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Category *</label>
                        <select name="category" id="edit_category" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select Category</option>
                            @foreach($categories as $key => $label)
                                <option value="{{ $key }}">{{ $label }}</option>
                            @endforeach
                        </select>
                    </div>
                    
                    <div>
                        <label for="edit_clause_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Clause Type *</label>
                        <select name="clause_type" id="edit_clause_type" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select Type</option>
                            @foreach($clauseTypes as $key => $label)
                                <option value="{{ $key }}">{{ $label }}</option>
                            @endforeach
                        </select>
                    </div>
                    
                    <div>
                        <label for="edit_status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Status *</label>
                        <select name="status" id="edit_status" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                            <option value="archived">Archived</option>
                        </select>
                    </div>
                    
                    <div>
                        <label for="edit_sort_order" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Sort Order</label>
                        <input type="number" name="sort_order" id="edit_sort_order" min="0" max="999"
                               class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    
                    <div class="flex items-center">
                        <input type="checkbox" name="is_required" id="edit_is_required" value="1" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label for="edit_is_required" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">Required in all contracts</label>
                    </div>
                </div>
                
                <div class="mb-6">
                    <label for="edit_description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Description</label>
                    <textarea name="description" id="edit_description" rows="2" 
                              class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500"
                              placeholder="Brief description of this clause..."></textarea>
                </div>
                
                <div class="mb-6">
                    <label for="edit_content" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Clause Content *</label>
                    <textarea name="content" id="edit_content" rows="10" required 
                              class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 font-mono"
                              placeholder="Enter the clause content..."></textarea>
                    <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                        Use <code>@{{variable_name}}</code> for template variables.
                    </p>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeEditModal()"
                            class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Update Clause
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Create Clause Modal -->
<div id="createClauseModal" class="fixed inset-0 z-50 overflow-y-auto hidden">
    <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
        </div>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full sm:p-6">
            <form action="{{ route('settings.contract-clauses.store') }}" method="POST">
                @csrf
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-lg font-medium text-gray-900 dark:text-white">Create New Contract Clause</h3>
                    <button type="button" onclick="document.getElementById('createClauseModal').style.display = 'none'" class="text-gray-400 hover:text-gray-600">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                    <div>
                        <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Clause Name *</label>
                        <input type="text" name="name" id="name" required 
                               class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    
                    <div>
                        <label for="category" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Category *</label>
                        <select name="category" id="category" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select Category</option>
                            @foreach($categories as $key => $label)
                                <option value="{{ $key }}">{{ $label }}</option>
                            @endforeach
                        </select>
                    </div>
                    
                    <div>
                        <label for="clause_type" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Clause Type *</label>
                        <select name="clause_type" id="clause_type" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="">Select Type</option>
                            @foreach($clauseTypes as $key => $label)
                                <option value="{{ $key }}">{{ $label }}</option>
                            @endforeach
                        </select>
                    </div>
                    
                    <div>
                        <label for="status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Status *</label>
                        <select name="status" id="status" required class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                            <option value="archived">Archived</option>
                        </select>
                    </div>
                    
                    <div>
                        <label for="sort_order" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Sort Order</label>
                        <input type="number" name="sort_order" id="sort_order" min="0" max="999" value="100"
                               class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    </div>
                    
                    <div class="flex items-center">
                        <input type="checkbox" name="is_required" id="is_required" value="1" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label for="is_required" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">Required in all contracts</label>
                    </div>
                </div>
                
                <div class="mb-6">
                    <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Description</label>
                    <textarea name="description" id="description" rows="2" 
                              class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500"
                              placeholder="Brief description of this clause..."></textarea>
                </div>
                
                <div class="mb-6">
                    <div class="flex items-center justify-between mb-2">
                        <label for="content" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Clause Content *</label>
                        <button type="button" id="toggleVariableReference" 
                                onclick="document.getElementById('variableReferencePanel').classList.toggle('hidden')"
                                class="text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 flex items-center">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 20l4-16m2 16l4-16M6 9h14M4 15h14"></path>
                            </svg>
                            Template Variables Reference
                        </button>
                    </div>
                    
                    <!-- Template Variable Reference Panel -->
                    <div id="variableReferencePanel" class="hidden mb-4 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg p-4">
                        <div class="mb-4">
                            <input type="text" id="variableSearch" placeholder="Search variables..." 
                                   class="w-full text-sm rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
                        </div>
                        
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 max-h-80 overflow-y-auto">
                            <!-- Variable Categories -->
                            @foreach($templateVariables['categories'] as $categoryName => $categoryData)
                            <div class="variable-category">
                                <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2 border-b border-gray-200 dark:border-gray-600 pb-1">
                                    {{ $categoryName }}
                                </h4>
                                <p class="text-xs text-gray-600 dark:text-gray-400 mb-2">{{ $categoryData['description'] }}</p>
                                <div class="space-y-1">
                                    @foreach($categoryData['variables'] as $varName => $varData)
                                    @php
                                        $displayVar = '{' . '{' . $varName . '}' . '}';
                                    @endphp
                                    <div class="variable-item cursor-pointer p-2 rounded text-sm hover:bg-blue-50 dark:hover:bg-blue-900/20" 
                                         data-variable="{{ $varName }}" 
                                         data-label="{{ $varData['label'] }}"
                                         data-example="{{ $varData['example'] }}"
                                         onclick="
                                            const textarea = document.getElementById('content');
                                            const variable = '{{ $displayVar }}';
                                            const start = textarea.selectionStart;
                                            const end = textarea.selectionEnd;
                                            const value = textarea.value;
                                            textarea.value = value.substring(0, start) + variable + value.substring(end);
                                            textarea.setSelectionRange(start + variable.length, start + variable.length);
                                            textarea.focus();
                                         "
                                         title="Click to insert: {{ $displayVar }}">
                                        <div class="flex items-center justify-between">
                                            <span class="font-mono text-xs text-blue-600 dark:text-blue-400">{{ $displayVar }}</span>
                                            <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                                            </svg>
                                        </div>
                                        <div class="text-xs text-gray-600 dark:text-gray-400">{{ $varData['label'] }}</div>
                                        <div class="text-xs text-gray-500 dark:text-gray-500 italic">Example: {{ $varData['example'] }}</div>
                                    </div>
                                    @endforeach
                                </div>
                            </div>
                            @endforeach
                        </div>
                        
                        <!-- Formatters Section -->
                        @if(isset($templateVariables['formatters']))
                        <div class="mt-6 pt-4 border-t border-gray-200 dark:border-gray-600">
                            <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2">Variable Formatters</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
                                @foreach($templateVariables['formatters'] as $categoryName => $formatters)
                                <div class="formatter-category">
                                    <h5 class="text-xs font-medium text-gray-700 dark:text-gray-300 mb-1">{{ $categoryName }}</h5>
                                    @foreach($formatters as $formatter => $data)
                                    <div class="formatter-item cursor-pointer p-1 rounded text-xs hover:bg-green-50 dark:hover:bg-green-900/20 border-l-2 border-green-300 dark:border-green-600 pl-2 mb-1"
                                         data-formatter="{{ $formatter }}" 
                                         title="Click to see example">
                                        <div class="font-mono text-green-600 dark:text-green-400">|{{ $formatter }}</div>
                                        <div class="text-gray-600 dark:text-gray-400">{{ $data['example'] }}</div>
                                    </div>
                                    @endforeach
                                </div>
                                @endforeach
                            </div>
                        </div>
                        @endif
                        
                        <!-- Conditionals Section -->
                        @if(isset($templateVariables['conditionals']))
                        <div class="mt-6 pt-4 border-t border-gray-200 dark:border-gray-600">
                            <h4 class="text-sm font-semibold text-gray-900 dark:text-white mb-2">Conditional Logic</h4>
                            <div class="space-y-3">
                                @foreach($templateVariables['conditionals'] as $categoryName => $conditionals)
                                <div class="conditional-category">
                                    <h5 class="text-xs font-medium text-gray-700 dark:text-gray-300 mb-2">{{ $categoryName }}</h5>
                                    @foreach($conditionals as $conditional => $data)
                                    @php
                                        $syntax = '{' . '{#' . $data['syntax'] . '}' . '}';
                                        $example = '{' . '{#' . $data['example'] . '}' . '}';
                                    @endphp
                                    <div class="conditional-item cursor-pointer p-2 rounded text-xs hover:bg-purple-50 dark:hover:bg-purple-900/20 border border-purple-200 dark:border-purple-600 mb-2"
                                         data-conditional="{{ $conditional }}" 
                                         data-syntax="{{ $syntax }}"
                                         onclick="
                                            const textarea = document.getElementById('content');
                                            const template = '{{ $syntax }}';
                                            const start = textarea.selectionStart;
                                            const end = textarea.selectionEnd;
                                            const value = textarea.value;
                                            textarea.value = value.substring(0, start) + template + value.substring(end);
                                            textarea.setSelectionRange(start + template.length, start + template.length);
                                            textarea.focus();
                                         "
                                         title="Click to insert template">
                                        <div class="font-semibold text-purple-600 dark:text-purple-400">{{ $data['label'] }}</div>
                                        <div class="font-mono text-xs text-gray-600 dark:text-gray-400 mt-1">{{ $syntax }}</div>
                                        <div class="text-gray-500 dark:text-gray-500 mt-1">{{ $example }}</div>
                                    </div>
                                    @endforeach
                                </div>
                                @endforeach
                            </div>
                        </div>
                        @endif
                    </div>
                    
                    @php
                        $varExample = '{' . '{variable_name}' . '}';
                        $condExample = '{' . '{#if condition}' . '}...{' . '{/if}' . '}';
                    @endphp
                    <textarea name="content" id="content" rows="10" required 
                              class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500 font-mono"
                              placeholder="Enter the clause content... Use {{ $varExample }} for template variables"></textarea>
                    <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                        Use <code>{{ $varExample }}</code> for template variables and <code>{{ $condExample }}</code> for conditional content.
                    </p>
                </div>

                <!-- Required Definitions Section -->
                <div class="mb-6" x-data="{ showDefinitions: false }">
                    <div class="flex items-center justify-between mb-3">
                        <label class="block text-sm font-medium text-gray-700 dark:text-gray-300">Required Definitions</label>
                        <button type="button" @click="showDefinitions = !showDefinitions" 
                                class="text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300">
                            <span x-text="showDefinitions ? 'Hide' : 'Show'"></span> Definition Options
                        </button>
                    </div>
                    <p class="text-sm text-gray-500 dark:text-gray-400 mb-3">
                        Select which definitions this clause requires. The definitions will be automatically included when this clause is used in a contract.
                    </p>
                    
                    <div x-show="showDefinitions" x-transition class="space-y-4">
                        @foreach($availableDefinitions as $category => $definitions)
                            <div class="border border-gray-200 dark:border-gray-600 rounded-lg p-4">
                                <h4 class="text-sm font-medium text-gray-900 dark:text-white mb-3">{{ $category }}</h4>
                                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
                                    @foreach($definitions as $key => $label)
                                        <label class="flex items-center space-x-2 text-sm">
                                            <input type="checkbox" name="required_definitions[]" value="{{ $key }}" 
                                                   class="rounded border-gray-300 dark:border-gray-600 text-blue-600 focus:ring-blue-500 dark:focus:ring-blue-400 dark:bg-gray-700">
                                            <span class="text-gray-700 dark:text-gray-300">{{ $label }}</span>
                                        </label>
                                    @endforeach
                                </div>
                            </div>
                        @endforeach
                    </div>

                    <!-- Summary of selected definitions -->
                    <div class="mt-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
                        <div id="definition-summary" class="text-sm text-gray-500 dark:text-gray-400">
                            Select definitions to add to your clause
                        </div>
                    </div>
                </div>
                
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="document.getElementById('createClauseModal').style.display = 'none'"
                            class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        Create Clause
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

</div> <!-- Close main Alpine.js container -->

<script>
async function editClause(clauseId) {
    try {
        // Fetch the clause data
        const response = await fetch(`/settings/contract-clauses/${clauseId}/edit`, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'X-CSRF-TOKEN': window.csrfToken
            }
        });

        if (!response.ok) {
            throw new Error('Failed to fetch clause data');
        }

        const data = await response.json();
        
        if (data.success) {
            const clause = data.clause;
            
            // Populate the form fields
            document.getElementById('edit_name').value = clause.name || '';
            document.getElementById('edit_category').value = clause.category || '';
            document.getElementById('edit_clause_type').value = clause.clause_type || '';
            document.getElementById('edit_status').value = clause.status || '';
            document.getElementById('edit_sort_order').value = clause.sort_order || '';
            document.getElementById('edit_description').value = clause.description || '';
            document.getElementById('edit_content').value = clause.content || '';
            document.getElementById('edit_is_required').checked = clause.is_required || false;
            
            // Set the form action URL
            document.getElementById('editClauseForm').action = `/settings/contract-clauses/${clauseId}`;
            
            // Show the modal
            document.getElementById('editClauseModal').style.display = 'block';
        } else {
            alert('Failed to load clause data');
        }
    } catch (error) {
        console.error('Error loading clause:', error);
        alert('Failed to load clause data. Please try again.');
    }
}

function closeEditModal() {
    document.getElementById('editClauseModal').style.display = 'none';
    
    // Reset form
    document.getElementById('editClauseForm').reset();
    document.getElementById('editClauseForm').action = '';
}

// Close modal when clicking outside
document.addEventListener('click', function(e) {
    const editModal = document.getElementById('editClauseModal');
    const createModal = document.getElementById('createClauseModal');
    
    if (e.target === editModal) {
        closeEditModal();
    }
    
    if (e.target === createModal) {
        createModal.style.display = 'none';
    }
});

// Handle escape key for modals
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        const editModal = document.getElementById('editClauseModal');
        const createModal = document.getElementById('createClauseModal');
        
        if (editModal.style.display === 'block') {
            closeEditModal();
        }
        
        if (createModal.style.display === 'block') {
            createModal.style.display = 'none';
        }
    }
});
</script>
@endsection