<div class="w-full space-y-6" 
     x-data="{ 
         transitioning: false,
         selectedRow: null 
     }"
     @client-selected.window="
         selectedRow = $event.detail.clientId;
         transitioning = true;
     "
     @redirect-with-animation.window="
         setTimeout(() => {
             window.location.href = $event.detail.url;
         }, $event.detail.delay);
     ">
     
    <!-- Selected Client Notice -->
    @if($selectedClient)
        <flux:card class="border-l-4 border-l-blue-500 bg-blue-50 dark:bg-blue-900/20">
            <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                    <flux:icon name="check-circle" class="w-5 h-5 text-blue-600 dark:text-blue-400" />
                    <flux:text class="text-blue-700 dark:text-blue-300">
                        <strong>Viewing:</strong> {{ $selectedClient->name }}
                        @if($selectedClient->company_name)
                            ({{ $selectedClient->company_name }})
                        @endif
                    </flux:text>
                </div>
                <flux:button 
                    wire:click="clearSelection"
                    variant="ghost"
                    size="sm"
                    class="text-blue-700 dark:text-blue-300 hover:text-blue-900 dark:hover:text-blue-100"
                >
                    Clear selection
                </flux:button>
            </div>
        </flux:card>
    @endif

    <!-- Header -->
    <flux:card>
        <div class="border-b border-gray-200 dark:border-gray-700 pb-6">
            <div class="flex items-center justify-between">
                <div>
                    <flux:heading size="xl">Clients</flux:heading>
                    <flux:text class="mt-1 text-gray-600 dark:text-gray-400">
                        Manage your clients and their information
                    </flux:text>
                </div>
                <div class="flex items-center gap-3">
                    @if($isLeadsView)
                        <flux:button variant="ghost" icon="arrow-up-tray" href="{{ route('clients.leads.import.form') }}">
                            Import Leads
                        </flux:button>
                    @endif
                    <flux:button variant="primary" icon="plus" href="{{ route('clients.create') }}">
                        {{ $isLeadsView ? 'Add Lead' : 'Add Client' }}
                    </flux:button>
                </div>
            </div>
        </div>

        <!-- Search Bar -->
        <div class="pt-4 pb-2">
            <flux:input 
                wire:model.live.debounce.300ms="search"
                type="search"
                placeholder="Search clients by name, company, or email..."
                icon="magnifying-glass"
            />
        </div>

        <!-- Tabs -->
        <div class="pt-2">
            <nav class="flex space-x-8" aria-label="Tabs">
                <a href="{{ route('clients.index') }}" 
                   class="{{ !$isLeadsView ? 'border-blue-500 text-blue-600 dark:text-blue-400' : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300' }} whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm transition-colors">
                    Customers
                </a>
                <a href="{{ route('clients.leads') }}" 
                   class="{{ $isLeadsView ? 'border-blue-500 text-blue-600 dark:text-blue-400' : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300' }} whitespace-nowrap pb-4 px-1 border-b-2 font-medium text-sm transition-colors">
                    Leads
                </a>
            </nav>
        </div>
    </flux:card>

    <!-- Clients Table with Animation -->
    <flux:card class="overflow-hidden" 
        x-data="{ 
            selectedRow: null,
            transitioning: false 
        }">
        @if($clients->count() > 0)
            <div class="overflow-x-auto">
                <flux:table>
                    <flux:table.columns>
                        <flux:table.column>Name</flux:table.column>
                        <flux:table.column>Contact</flux:table.column>
                        <flux:table.column>Location</flux:table.column>
                        <flux:table.column>Type</flux:table.column>
                        <flux:table.column>Status</flux:table.column>
                        <flux:table.column></flux:table.column>
                    </flux:table.columns>

                    <flux:table.rows>
                        @foreach($clients as $client)
                            <flux:table.row 
                                wire:key="client-{{ $client->id }}"
                                x-data="{ 
                                    isAnimating: false,
                                    clientId: {{ $client->id }},
                                    isSelected: {{ $selectedClientId === $client->id ? 'true' : 'false' }}
                                }"
                                x-on:client-selected.window="
                                    if ($event.detail.clientId === clientId) {
                                        isAnimating = true;
                                        selectedRow = clientId;
                                        transitioning = true;
                                        setTimeout(() => {
                                            window.location.href = '{{ route('dashboard') }}';
                                        }, 800);
                                    }
                                "
                                :class="{
                                    'bg-blue-50 dark:bg-blue-900/20 border-l-4 border-l-blue-500': isSelected,
                                    'scale-105 bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/30 dark:to-purple-900/30 shadow-lg transition-all duration-500': isAnimating
                                }"
                            >
                                <flux:table.cell>
                                    <div class="flex items-center gap-3">
                                        <div class="h-10 w-10 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center flex-shrink-0"
                                             :class="{ 'animate-pulse': isAnimating }">
                                            <span class="text-sm font-medium text-gray-700 dark:text-gray-300">
                                                {{ strtoupper(substr($client->name, 0, 2)) }}
                                            </span>
                                        </div>
                                        <div>
                                            <flux:text class="font-medium">{{ $client->name }}</flux:text>
                                            @if($client->company_name)
                                                <flux:text size="sm" class="text-gray-500 dark:text-gray-400">
                                                    {{ $client->company_name }}
                                                </flux:text>
                                            @endif
                                        </div>
                                    </div>
                                </flux:table.cell>

                                <flux:table.cell>
                                    @if($client->primaryContact)
                                        <div>
                                            <flux:text>{{ $client->primaryContact->name }}</flux:text>
                                            <flux:text size="sm" class="text-gray-500 dark:text-gray-400">
                                                {{ $client->primaryContact->email }}
                                            </flux:text>
                                        </div>
                                    @else
                                        <flux:text class="text-gray-400 dark:text-gray-500">No contact</flux:text>
                                    @endif
                                </flux:table.cell>

                                <flux:table.cell>
                                    @if($client->primaryLocation)
                                        <flux:text>{{ $client->primaryLocation->city }}, {{ $client->primaryLocation->state }}</flux:text>
                                    @else
                                        <flux:text class="text-gray-400 dark:text-gray-500">No location</flux:text>
                                    @endif
                                </flux:table.cell>

                                <flux:table.cell>
                                    <flux:text>{{ $client->type ?? 'N/A' }}</flux:text>
                                </flux:table.cell>

                                <flux:table.cell>
                                    @if($client->status === 'active')
                                        <flux:badge color="green" size="sm">Active</flux:badge>
                                    @else
                                        <flux:badge color="zinc" size="sm">
                                            {{ ucfirst($client->status ?? 'inactive') }}
                                        </flux:badge>
                                    @endif
                                </flux:table.cell>

                                <flux:table.cell>
                                    <div class="flex items-center justify-end gap-2">
                                        <div x-show="!isAnimating">
                                            <flux:button 
                                                wire:click="selectClient({{ $client->id }})"
                                                variant="primary"
                                                size="sm"
                                                wire:loading.attr="disabled"
                                                wire:target="selectClient({{ $client->id }})"
                                            >
                                                <span wire:loading.remove wire:target="selectClient({{ $client->id }})">
                                                    View
                                                </span>
                                                <span wire:loading wire:target="selectClient({{ $client->id }})">
                                                    <flux:icon name="arrow-path" class="w-4 h-4 animate-spin" />
                                                </span>
                                            </flux:button>
                                        </div>
                                        
                                        <div x-show="isAnimating" 
                                             x-cloak
                                             x-transition:enter="transition ease-out duration-300"
                                             x-transition:enter-start="opacity-0 scale-75"
                                             x-transition:enter-end="opacity-100 scale-100"
                                             class="flex items-center gap-2">
                                            <flux:icon name="check-circle" class="w-5 h-5 text-green-600 dark:text-green-400 animate-bounce" />
                                            <flux:text size="sm" class="text-green-600 dark:text-green-400 font-medium">
                                                Loading...
                                            </flux:text>
                                        </div>
                                        
                                        <flux:dropdown x-show="!isAnimating">
                                            <flux:button variant="ghost" size="sm" icon="ellipsis-vertical" />
                                            <flux:menu>
                                                <flux:menu.item icon="pencil" href="{{ route('clients.edit', $client) }}">
                                                    Edit
                                                </flux:menu.item>
                                                <flux:menu.item icon="user-group" href="{{ route('clients.contacts.index', $client) }}">
                                                    Manage Contacts
                                                </flux:menu.item>
                                                <flux:menu.item icon="map-pin" href="{{ route('clients.locations.index', $client) }}">
                                                    Manage Locations
                                                </flux:menu.item>
                                                <flux:separator />
                                                <flux:menu.item icon="ticket" href="{{ route('tickets.create', ['client_id' => $client->id]) }}">
                                                    Create Ticket
                                                </flux:menu.item>
                                                <flux:menu.item icon="document-text" href="{{ route('financial.invoices.create', ['client_id' => $client->id]) }}">
                                                    Create Invoice
                                                </flux:menu.item>
                                                <flux:menu.item icon="clipboard-document-list" href="{{ route('projects.create', ['client_id' => $client->id]) }}">
                                                    Create Project
                                                </flux:menu.item>
                                                @can('delete', $client)
                                                    <flux:separator />
                                                    <flux:menu.item 
                                                        icon="trash" 
                                                        variant="danger" 
                                                        wire:click="deleteClient({{ $client->id }})"
                                                        wire:confirm="Are you sure you want to delete this client? This action cannot be undone."
                                                    >
                                                        Delete
                                                    </flux:menu.item>
                                                @endcan
                                            </flux:menu>
                                        </flux:dropdown>
                                    </div>
                                </flux:table.cell>
                            </flux:table.row>
                        @endforeach
                    </flux:table.rows>
                </flux:table>
            </div>
            
            <!-- Pagination -->
            @if($clients->hasPages())
                <div class="px-6 py-4 border-t border-gray-200 dark:border-gray-700">
                    {{ $clients->links() }}
                </div>
            @endif
        @else
            <!-- Empty State -->
            <div class="text-center py-16">
                <flux:icon name="user-group" class="w-16 h-16 mx-auto text-gray-400 dark:text-gray-600 mb-4" />
                <flux:heading size="lg" class="mb-2">
                    @if($search)
                        No clients found matching "{{ $search }}"
                    @else
                        No clients found
                    @endif
                </flux:heading>
                <flux:text class="text-gray-600 dark:text-gray-400 mb-6">
                    @if($search)
                        Try adjusting your search terms
                    @else
                        {{ $isLeadsView ? 'Get started by adding your first lead.' : 'Get started by adding your first client.' }}
                    @endif
                </flux:text>
                @if(!$search)
                    <flux:button variant="primary" icon="plus" href="{{ route('clients.create') }}">
                        {{ $isLeadsView ? 'Add Lead' : 'Add Client' }}
                    </flux:button>
                @endif
            </div>
        @endif
    </flux:card>

    <!-- Success Toast -->
    <div x-data="{ show: false, message: '' }"
         x-show="show"
         x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="translate-y-2 opacity-0"
         x-transition:enter-end="translate-y-0 opacity-100"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="translate-y-0 opacity-100"
         x-transition:leave-end="translate-y-2 opacity-0"
         @client-deleted.window="
             message = 'Client ' + $event.detail.clientName + ' has been deleted';
             show = true;
             setTimeout(() => show = false, 3000);
         "
         class="fixed bottom-4 right-4 z-50">
        <flux:card class="bg-green-50 dark:bg-green-900/30 border-l-4 border-l-green-500">
            <div class="flex items-center gap-3">
                <flux:icon name="check-circle" class="w-5 h-5 text-green-600 dark:text-green-400" />
                <flux:text x-text="message"></flux:text>
            </div>
        </flux:card>
    </div>
</div>
