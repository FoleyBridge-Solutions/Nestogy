@extends('layouts.app')

@section('title', 'Ticket #' . $ticket->number)

@section('content')
<div class="w-full px-6">
    <div class="flex flex-wrap -mx-4">
        <!-- Ticket Details -->
        <div class="w-full lg:w-2/3 px-6">
            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900">
                    <div class="flex justify-between items-center">
                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white dark:text-white">
                            Ticket #{{ $ticket->ticket_number ?? $ticket->number }} - {{ $ticket->subject }}
                        </h3>
                        <div class="space-x-2">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium 
                                @if($ticket->getPriorityColor() == 'success') bg-green-100 text-green-800
                                @elseif($ticket->getPriorityColor() == 'warning') bg-yellow-100 text-yellow-800
                                @elseif($ticket->getPriorityColor() == 'danger') bg-red-100 text-red-800
                                @elseif($ticket->getPriorityColor() == 'dark') bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200
                                @else bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200 @endif">
                                {{ $ticket->priority }}
                            </span>
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium 
                                @if($ticket->getStatusColor() == 'primary') bg-blue-100 text-blue-800
                                @elseif($ticket->getStatusColor() == 'info') bg-cyan-100 text-cyan-800
                                @elseif($ticket->getStatusColor() == 'warning') bg-yellow-100 text-yellow-800
                                @elseif($ticket->getStatusColor() == 'success') bg-green-100 text-green-800
                                @elseif($ticket->getStatusColor() == 'dark') bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200
                                @else bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200 @endif">
                                {{ $ticket->status }}
                            </span>
                        </div>
                    </div>
                </div>
                <div class="p-6">
                    <div class="mb-6">
                        <h5 class="text-base font-medium text-gray-900 dark:text-white dark:text-white mb-6">Details</h5>
                        <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 p-6 rounded-md border">
                            <div class="text-gray-700 dark:text-gray-300 dark:text-gray-300 whitespace-pre-wrap">{{ $ticket->details }}</div>
                        </div>
                    </div>

                    <!-- Ticket Replies -->
                    <div class="mb-6">
                        <h5 class="text-base font-medium text-gray-900 dark:text-white dark:text-white mb-6">Replies</h5>
                        @forelse($ticket->replies as $reply)
                            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 border rounded-lg mb-6 {{ $reply->type == 'internal' ? 'border-yellow-300 bg-yellow-50' : 'border-gray-200 dark:border-gray-700 dark:border-gray-700' }}">
                                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 rounded-t-lg">
                                    <div class="flex justify-between items-center">
                                        <div class="flex items-center space-x-2">
                                            <span class="font-medium text-gray-900 dark:text-white dark:text-white">{{ $reply->user->name }}</span>
                                            @if($reply->type == 'internal')
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                                                    Internal Note
                                                </span>
                                            @elseif($reply->type == 'private')
                                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    Private
                                                </span>
                                            @endif
                                        </div>
                                        <span class="text-sm text-gray-500">{{ $reply->created_at->format('M d, Y g:i A') }}</span>
                                    </div>
                                </div>
                                <div class="p-6">
                                    <div class="text-gray-700 dark:text-gray-300 dark:text-gray-300 whitespace-pre-wrap">{{ $reply->reply }}</div>
                                    @if($reply->time_worked)
                                        <div class="mt-6 pt-3 border-t border-gray-100">
                                            <span class="text-sm text-gray-600 dark:text-gray-400 dark:text-gray-400">⏱️ Time worked: {{ $reply->time_worked }}</span>
                                        </div>
                                    @endif
                                </div>
                            </div>
                        @empty
                            <p class="text-gray-500 italic">No replies yet.</p>
                        @endforelse
                    </div>

                    <!-- Add Reply Form -->
                    <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 p-6 rounded-lg">
                        <h5 class="text-base font-medium text-gray-900 dark:text-white dark:text-white mb-6">Add Reply</h5>
                        <form action="{{ route('tickets.replies.store', $ticket) }}" method="POST" class="space-y-4">
                            @csrf
                            <div>
                                <textarea name="reply" 
                                    class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm @error('reply') border-red-300 @enderror" 
                                    rows="4" placeholder="Enter your reply..." required></flux:textarea>
                                @error('reply')
                                    <p class="mt-1 text-sm text-red-600">{{ $message }}</p>
                                @enderror
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                                <div>
                                    <label for="type" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Reply Type</flux:label>
                                    <select name="type" id="type" class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                        <option value="public">Public</option>
                                        <option value="private">Private</option>
                                        <option value="internal">Internal Note</option>
                                    </flux:select>
                                </div>
                                <div>
                                    <label for="time_worked" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Time Worked (HH:MM)</flux:label>
                                    <input type="text" name="time_worked" id="time_worked" 
                                           class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" 
                                           placeholder="01:30">
                                </div>
                                <div>
                                    <label for="status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Update Status</flux:label>
                                    <select name="status" id="status" class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                        <option value="">Keep Current</option>
                                        <option value="Open">Open</option>
                                        <option value="In Progress">In Progress</option>
                                        <option value="On Hold">On Hold</option>
                                        <option value="Resolved">Resolved</option>
                                        <option value="Closed">Closed</option>
                                    </flux:select>
                                </div>
                            </div>
                            <div class="flex justify-end">
                                <button type="submit" class="inline-flex items-center px-6 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                    </svg>
                                    Add Reply
                                </flux:button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Ticket Sidebar -->
        <div class="w-full lg:w-1/3 px-6 mt-6 lg:mt-0">
            <!-- Ticket Information -->
            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-white dark:text-white">Ticket Information</h4>
                </div>
                <div class="p-6">
                    <dl class="space-y-3">
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Client:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">
                                <a href="{{ route('clients.show', $ticket->client) }}" class="text-blue-600 hover:text-blue-800">{{ $ticket->client->name }}</a>
                            </dd>
                        </div>

                        @if($ticket->contact)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Contact:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->contact->name }}</dd>
                        </div>
                        @endif

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Created:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->created_at->format('M d, Y g:i A') }}</dd>
                        </div>

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Updated:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->updated_at->format('M d, Y g:i A') }}</dd>
                        </div>

                        @if($ticket->closed_at)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Closed:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->closed_at->format('M d, Y g:i A') }}</dd>
                        </div>
                        @endif

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Created By:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->creator->name }}</dd>
                        </div>

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Assigned To:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">
                                @if($ticket->assignee)
                                    {{ $ticket->assignee->name }}
                                @else
                                    <span class="text-gray-400 italic">Unassigned</span>
                                @endif
                            </dd>
                        </div>

                        @if($ticket->asset)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Asset:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">
                                <a href="{{ route('assets.show', $ticket->asset) }}" class="text-blue-600 hover:text-blue-800">{{ $ticket->asset->name }}</a>
                            </dd>
                        </div>
                        @endif

                        @if($ticket->vendor)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Vendor:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->vendor->name }}</dd>
                        </div>
                        @endif

                        @if($ticket->vendor_ticket_number)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Vendor Ticket:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->vendor_ticket_number }}</dd>
                        </div>
                        @endif

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Billable:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">
                                @if($ticket->billable)
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Yes</span>
                                @else
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200">No</span>
                                @endif
                            </dd>
                        </div>

                        @if($ticket->scheduled_at)
                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Scheduled:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">
                                {{ $ticket->scheduled_at->format('M d, Y g:i A') }}
                                @if($ticket->onsite)
                                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 ml-2">Onsite</span>
                                @endif
                            </dd>
                        </div>
                        @endif

                        <div class="flex justify-between">
                            <dt class="text-sm font-medium text-gray-500">Total Time:</dt>
                            <dd class="text-sm text-gray-900 dark:text-white dark:text-white">{{ $ticket->getTotalTimeWorked() }} hours</dd>
                        </div>
                    </dl>
                </div>
                
                <!-- Action Buttons -->
                <div class="px-6 py-6 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700 dark:border-gray-700">
                    <div class="flex flex-wrap gap-2">
                        <a href="{{ route('tickets.edit', $ticket) }}" 
                           class="inline-flex items-center px-6 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                            Edit
                        </a>
                        @if($ticket->status !== 'Closed')
                        <button type="button" onclick="openModal('closeTicketModal')"
                                class="inline-flex items-center px-6 py-2 text-sm font-medium text-white bg-green-600 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                            </svg>
                            Close
                        </flux:button>
                        @endif
                        <button type="button" onclick="openModal('deleteTicketModal')"
                                class="inline-flex items-center px-6 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                            Delete
                        </flux:button>
                    </div>
                </div>
            </div>

            <!-- Other Viewers -->
            @if(count($otherViewers) > 0)
            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden mt-6">
                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-white dark:text-white">Currently Viewing</h4>
                </div>
                <div class="p-6">
                    <ul class="space-y-2">
                        @foreach($otherViewers as $viewer)
                        <li class="flex items-center text-sm">
                            <svg class="w-4 h-4 mr-2 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                            <span class="text-gray-900 dark:text-white dark:text-white">{{ $viewer['name'] }}</span>
                            <span class="text-gray-500 ml-2">({{ $viewer['last_viewed'] }})</span>
                        </li>
                        @endforeach
                    </ul>
                </div>
            </div>
            @endif

            <!-- Intelligent Time Tracking Dashboard -->
            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden mt-6">
                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-white dark:text-white">⚡ Time Tracker</h4>
                </div>
                <div class="p-6 space-y-3">
                    <!-- Current Rate Info -->
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600 dark:text-gray-400 dark:text-gray-400">Current Rate:</span>
                        <div id="current-rate-info">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-800 dark:bg-gray-800 text-gray-800 dark:text-gray-200 dark:text-gray-200">
                                Loading...
                            </span>
                        </div>
                    </div>
                    
                    <!-- Active Timer -->
                    <div class="flex justify-between items-center">
                        <span class="text-sm text-gray-600 dark:text-gray-400 dark:text-gray-400">Active Timer:</span>
                        <div id="active-timer">
                            <span class="text-gray-400">Loading...</span>
                        </div>
                    </div>
                    
                    <!-- Today's Metrics -->
                    <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 rounded-lg p-6">
                        <div class="text-sm text-gray-600 dark:text-gray-400 dark:text-gray-400 mb-2">Today's Progress</div>
                        <div id="today-metrics">
                            <div class="text-center">
                                <div class="text-lg font-bold text-gray-400">Loading...</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Smart Actions -->
                    <div id="timer-button" class="space-y-2">
                        <button onclick="showTimerPrompt()" 
                                class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-green-700 bg-green-50 border border-green-200 rounded-md hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            ⚡ Start Timer
                        </flux:button>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg shadow-md overflow-hidden mt-6">
                <div class="px-6 py-6 border-b border-gray-200 dark:border-gray-700 dark:border-gray-700 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900">
                    <h4 class="text-lg font-medium text-gray-900 dark:text-white dark:text-white">Quick Actions</h4>
                </div>
                <div class="p-6 space-y-2">
                    <button onclick="openModal('assignModal')" 
                            class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-blue-700 bg-blue-50 border border-blue-200 rounded-md hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        Assign Ticket
                    </flux:button>
                    <button onclick="openModal('scheduleModal')" 
                            class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-cyan-700 bg-cyan-50 border border-cyan-200 rounded-md hover:bg-cyan-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                        Schedule Ticket
                    </flux:button>
                    <button @click="$dispatch('ticket-merge-open')" 
                            class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-yellow-700 bg-yellow-50 border border-yellow-200 rounded-md hover:bg-yellow-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                        </svg>
                        Merge Ticket
                    </flux:button>
                    <a href="{{ route('tickets.pdf', $ticket) }}" 
                       class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 dark:border-gray-700 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700 dark:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                        </svg>
                        Export PDF
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals -->
<!-- Close Ticket Modal -->
<div id="closeTicketModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-center justify-center min-h-screen pt-4 px-6 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal('closeTicketModal')"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form action="{{ route('tickets.status.update', $ticket) }}" method="POST">
                @csrf
                @method('PATCH')
                <input type="hidden" name="status" value="Closed">
                <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 px-6 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                            <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                            </svg>
                        </div>
                        <div class="mt-6 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                            <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white dark:text-white mb-6">Close Ticket</h3>
                            <p class="text-gray-500 mb-6">Are you sure you want to close this ticket?</p>
                            <div>
                                <label for="close_reason" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-2">Closing Note (Optional)</flux:label>
                                <textarea name="close_reason" id="close_reason" rows="3" 
                                    class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></flux:textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 px-6 py-6 sm:px-6 sm:flex sm:flex-flex flex-wrap -mx-4-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-6 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Close Ticket
                    </flux:button>
                    <button type="button" onclick="closeModal('closeTicketModal')" class="mt-6 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 dark:border-gray-600 shadow-sm px-6 py-2 bg-white dark:bg-gray-800 dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Cancel
                    </flux:button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Ticket Modal -->
<div id="deleteTicketModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-center justify-center min-h-screen pt-4 px-6 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal('deleteTicketModal')"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form action="{{ route('tickets.destroy', $ticket) }}" method="POST">
                @csrf
                @method('DELETE')
                <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 px-6 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                            <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                        </div>
                        <div class="mt-6 text-center sm:mt-0 sm:ml-4 sm:text-left">
                            <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white dark:text-white">Delete Ticket</h3>
                            <div class="mt-2">
                                <p class="text-sm text-gray-500">Are you sure you want to delete this ticket? This action cannot be undone.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 px-6 py-6 sm:px-6 sm:flex sm:flex-flex flex-wrap -mx-4-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-6 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Delete Ticket
                    </flux:button>
                    <button type="button" onclick="closeModal('deleteTicketModal')" class="mt-6 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 dark:border-gray-600 shadow-sm px-6 py-2 bg-white dark:bg-gray-800 dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Cancel
                    </flux:button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Assign Modal -->
<div id="assignModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-center justify-center min-h-screen pt-4 px-6 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal('assignModal')"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form action="{{ route('tickets.assign', $ticket) }}" method="POST">
                @csrf
                @method('PATCH')
                <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 px-6 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white dark:text-white mb-6">Assign Ticket</h3>
                    <div>
                        <label for="assigned_to" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-2">Assign To</flux:label>
                        <select name="assigned_to" id="assigned_to" required
                            class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                            <option value="">Select User</option>
                            @foreach(\App\Models\User::where('company_id', auth()->user()->company_id)->where('status', true)->orderBy('name')->get() as $user)
                                <option value="{{ $user->id }}" {{ $ticket->assigned_to == $user->id ? 'selected' : '' }}>
                                    {{ $user->name }}
                                </option>
                            @endforeach
                        </flux:select>
                    </div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 px-6 py-6 sm:px-6 sm:flex sm:flex-flex flex-wrap -mx-4-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-6 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Assign
                    </flux:button>
                    <button type="button" onclick="closeModal('assignModal')" class="mt-6 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 dark:border-gray-600 shadow-sm px-6 py-2 bg-white dark:bg-gray-800 dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Cancel
                    </flux:button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Schedule Modal -->
<div id="scheduleModal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-center justify-center min-h-screen pt-4 px-6 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal('scheduleModal')"></div>
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form action="{{ route('tickets.schedule', $ticket) }}" method="POST">
                @csrf
                @method('PATCH')
                <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 px-6 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white dark:text-white mb-6">Schedule Ticket</h3>
                    <div class="space-y-4">
                        <div>
                            <label for="scheduled_at" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Schedule Date/Time</flux:label>
                            <input type="datetime-local" name="scheduled_at" id="scheduled_at" required
                                class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="duration" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Duration (minutes)</flux:label>
                            <input type="number" name="duration" id="duration" value="60" min="15" max="480" placeholder="60"
                                class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                            <p class="mt-1 text-sm text-gray-500">Duration in minutes (15-480)</p>
                        </div>
                        <div>
                            <label for="location" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Location</flux:label>
                            <input type="text" name="location" id="location" placeholder="Enter location (optional)"
                                class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="is_onsite" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Onsite Visit</flux:label>
                            <select name="is_onsite" id="is_onsite" 
                                class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                <option value="0">No</option>
                                <option value="1">Yes</option>
                            </flux:select>
                        </div>
                        <div>
                            <label for="notes" class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Notes</flux:label>
                            <textarea name="notes" id="notes" rows="3" placeholder="Additional scheduling notes (optional)"
                                class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"></flux:textarea>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 px-6 py-6 sm:px-6 sm:flex sm:flex-flex flex-wrap -mx-4-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-6 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Schedule
                    </flux:button>
                    <button type="button" onclick="closeModal('scheduleModal')" class="mt-6 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 dark:border-gray-600 shadow-sm px-6 py-2 bg-white dark:bg-gray-800 dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Cancel
                    </flux:button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modern Merge Ticket Component -->
<x-ticket-merge-modal :ticket="$ticket" />
@endsection

@push('scripts')
<script>
// Modal functionality
function openModal(modalId) {
    document.getElementById(modalId).classList.remove('hidden');
}

function closeModal(modalId) {
    document.getElementById(modalId).classList.add('hidden');
}

// Auto-refresh viewer list every 30 seconds
setInterval(function() {
    fetch('{{ route('tickets.viewers', $ticket) }}')
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                const viewerElement = document.getElementById('viewer-message');
                if (viewerElement) {
                    viewerElement.innerHTML = data.message;
                }
            }
        })
        .catch(error => console.log('Error checking viewers:', error));
}, 30000);

// ===========================================
// INTELLIGENT TIME TRACKING FUNCTIONALITY
// ===========================================

// Show timer start prompt on page load
document.addEventListener('DOMContentLoaded', function() {
    // Check if user wants auto-start prompt
    const shouldPrompt = localStorage.getItem('timeTracker_autoPrompt') !== 'false';
    
    if (shouldPrompt) {
        setTimeout(showTimerPrompt, 2000); // Show after 2 seconds
    }
    
    // Load current rate info
    loadCurrentRateInfo();
    
    // Load billing dashboard
    loadBillingDashboard();
});

function showTimerPrompt() {
    fetch('{{ route('tickets.smart-tracking-info', $ticket) }}')
        .then(response => response.json())
        .then(data => {
            if (data.tracking_info.error) {
                console.log('Timer already running:', data.tracking_info.message);
                return;
            }
            
            // Use custom modal instead of browser confirm
            (async () => {
                const startTimer = await confirmAction(
                    '⚡ Start time tracking for this ticket?\n\nWe can suggest work types and templates.',
                    {
                        title: 'Start Time Tracking',
                        confirmText: 'Start Timer',
                        cancelText: 'Not Now',
                        type: 'info'
                    }
                );
                
                if (startTimer) {
                    showTimerModal(data);
                } else {
                    // Ask if they want to stop showing prompts
                    const stopPrompts = await confirmAction(
                        'Stop showing auto-start prompts for future tickets?',
                        {
                            title: 'Auto-Start Preferences',
                            confirmText: 'Stop Prompts',
                            cancelText: 'Keep Prompts',
                            type: 'info'
                        }
                    );
                    
                    if (stopPrompts) {
                        localStorage.setItem('timeTracker_autoPrompt', 'false');
                        showNotification('Auto-start prompts disabled', 'info');
                    }
                }
            })();
        })
        .catch(error => console.log('Error loading tracking info:', error));
}

function showTimerModal(data) {
    const modal = createTimerModal(data);
    document.body.appendChild(modal);
    modal.classList.remove('hidden');
}

function createTimerModal(data) {
    const modal = document.createElement('div');
    modal.id = 'timerModal';
    modal.className = 'fixed inset-0 z-50 overflow-y-auto';
    
    const suggestions = data.tracking_info.work_type_suggestions || [];
    const templates = data.templates || [];
    const rateInfo = data.tracking_info.rate_info || {};
    
    modal.innerHTML = `
        <div class="flex items-center justify-center min-h-screen pt-4 px-6 pb-20 text-center sm:block sm:p-0">
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" onclick="closeTimerModal()"></div>
            <div class="inline-block align-bottom bg-white dark:bg-gray-800 dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full">
                <div class="bg-white dark:bg-gray-800 dark:bg-gray-800 px-6 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white dark:text-white mb-6">⚡ Time Tracking</h3>
                    
                    <!-- Rate Info -->
                    <div class="mb-6 p-6 rounded-lg ${rateInfo.is_premium ? 'bg-orange-50 border border-orange-200' : 'bg-green-50 border border-green-200'}">
                        <div class="flex items-center">
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-${rateInfo.visual_indicator?.color || 'gray'}-100 text-${rateInfo.visual_indicator?.color || 'gray'}-800">
                                ${rateInfo.visual_indicator?.badge || 'Standard'}
                            </span>
                            <span class="ml-2 text-sm text-gray-600 dark:text-gray-400 dark:text-gray-400">${rateInfo.description || 'Standard rate'}</span>
                            ${rateInfo.is_premium ? '<span class="ml-2 text-sm font-medium text-orange-600">' + rateInfo.multiplier + 'x rate</span>' : ''}
                        </div>
                    </div>
                    
                    <!-- Quick Templates -->
                    ${templates.length > 0 ? `
                    <div class="mb-6">
                        <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-2">⚡ Quick Templates (${templates.length} matches)</h4>
                        <div class="space-y-2">
                            ${templates.slice(0, 3).map(template => `
                                <button onclick="useTemplate(${template.id})" class="w-full text-left p-6 border border-gray-200 dark:border-gray-700 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 transition-colors">
                                    <div class="flex justify-between items-center">
                                        <div>
                                            <div class="font-medium text-sm text-gray-900 dark:text-white dark:text-white">${template.name}</div>
                                            <div class="text-xs text-gray-500">${template.description}</div>
                                        </div>
                                        <div class="text-right">
                                            <div class="text-sm font-medium text-gray-900 dark:text-white dark:text-white">${template.default_hours}h</div>
                                            <div class="text-xs text-green-600">${Math.round(template.confidence)}% match</div>
                                        </div>
                                    </div>
                                </flux:button>
                            `).join('')}
                        </div>
                    </div>
                    ` : ''}
                    
                    <!-- Manual Timer Start -->
                    <div class="border-t pt-4">
                        <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-2">🕐 Start Timer</h4>
                        <div class="space-y-3">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Work Type</flux:label>
                                <select id="workTypeSelect" class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    ${suggestions.map(suggestion => `
                                        <option value="${suggestion.work_type}">${suggestion.work_type} (${Math.round(suggestion.confidence)}% confidence)</option>
                                    `).join('')}
                                    <option value="general_support">General Support</option>
                                </flux:select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 mb-1">Description (optional)</flux:label>
                                <input type="text" id="timerDescription" placeholder="Brief description of work..." class="block w-full px-6 py-2 border border-gray-300 dark:border-gray-600 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 dark:bg-gray-900 dark:bg-gray-900 px-6 py-6 sm:px-6 sm:flex sm:flex-flex flex-wrap -mx-4-reverse">
                    <button onclick="startTimer()" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-6 py-2 bg-green-600 text-base font-medium text-white hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 sm:ml-3 sm:w-auto sm:text-sm">
                        ⚡ Start Timer
                    </flux:button>
                    <button onclick="closeTimerModal()" class="mt-6 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 dark:border-gray-600 shadow-sm px-6 py-2 bg-white dark:bg-gray-800 dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 dark:bg-gray-900 dark:hover:bg-gray-700 dark:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Later
                    </flux:button>
                </div>
            </div>
        </div>
    `;
    
    return modal;
}

function closeTimerModal() {
    const modal = document.getElementById('timerModal');
    if (modal) {
        modal.remove();
    }
}

function startTimer() {
    const workType = document.getElementById('workTypeSelect').value;
    const description = document.getElementById('timerDescription').value;
    
    const formData = new FormData();
    formData.append('work_type', workType);
    if (description) formData.append('description', description);
    
    fetch('{{ route('tickets.start-smart-timer', $ticket) }}', {
        method: 'POST',
        headers: {
            'X-CSRF-TOKEN': '{{ csrf_token() }}',
        },
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            closeTimerModal();
            showNotification('✅ Timer started successfully!', 'success');
            loadBillingDashboard(); // Refresh dashboard
        } else {
            showNotification('❌ ' + data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error starting timer:', error);
        showNotification('❌ Error starting timer', 'error');
    });
}

function useTemplate(templateId) {
    if (confirm('Create time entry from this template?')) {
        const formData = new FormData();
        formData.append('template_id', templateId);
        
        fetch('{{ route('tickets.create-time-from-template', $ticket) }}', {
            method: 'POST',
            headers: {
                'X-CSRF-TOKEN': '{{ csrf_token() }}',
            },
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                closeTimerModal();
                showNotification('✅ Time entry created from template!', 'success');
                loadBillingDashboard(); // Refresh dashboard
            } else {
                showNotification('❌ ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error creating time entry:', error);
            showNotification('❌ Error creating time entry', 'error');
        });
    }
}

function loadCurrentRateInfo() {
    fetch('{{ route('tickets.api.current-rate-info') }}')
        .then(response => response.json())
        .then(data => {
            const rateElement = document.getElementById('current-rate-info');
            if (rateElement && data.visual_indicator) {
                rateElement.innerHTML = `
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-${data.visual_indicator.color}-100 text-${data.visual_indicator.color}-800">
                        ${data.visual_indicator.badge}
                    </span>
                `;
            }
        })
        .catch(error => console.log('Error loading rate info:', error));
}

function loadBillingDashboard() {
    fetch('{{ route('tickets.api.billing-dashboard') }}')
        .then(response => response.json())
        .then(data => {
            updateBillingDashboard(data);
        })
        .catch(error => console.log('Error loading billing dashboard:', error));
}

function updateBillingDashboard(data) {
    // Update today's metrics with enhanced live data
    const todayElement = document.getElementById('today-metrics');
    if (todayElement) {
        const progress = data.today.progress_percentage || 0;
        todayElement.innerHTML = `
            <div class="space-y-2">
                <div class="text-center">
                    <div class="text-2xl font-bold text-green-600">$${data.today.revenue || 0}</div>
                    <div class="text-sm text-gray-500">${data.today.billable_hours || 0}h billable</div>
                </div>
                <div class="w-full bg-gray-200 rounded-full h-2">
                    <div class="bg-green-500 h-2 rounded-full transition-all duration-300" style="width: ${Math.min(progress, 100)}%"></div>
                </div>
                <div class="text-xs text-gray-500 text-center">${progress}% of daily target</div>
            </div>
        `;
    }
    
    // Update active timer with enhanced controls
    const timerElement = document.getElementById('active-timer');
    const timerButtonElement = document.getElementById('timer-button');
    
    if (timerElement && timerButtonElement) {
        if (data.active_timer) {
            const minutes = data.active_timer.elapsed_minutes;
            const hours = Math.floor(minutes / 60);
            const mins = minutes % 60;
            
            timerElement.innerHTML = `
                <div class="space-y-1">
                    <div class="flex items-center text-orange-600">
                        <div class="w-2 h-2 bg-orange-500 rounded-full mr-2 animate-pulse"></div>
                        <span class="font-mono font-bold">${hours.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}</span>
                    </div>
                    <div class="text-xs text-gray-600 dark:text-gray-400 dark:text-gray-400">
                        <div>$${data.active_timer.live_amount?.toFixed(2) || '0.00'} • $${data.active_timer.hourly_rate}/hr</div>
                        <div class="truncate">Ticket #${data.active_timer.ticket_number}</div>
                    </div>
                </div>
            `;
            
            // Update button to show timer controls
            timerButtonElement.innerHTML = `
                <div class="space-y-1">
                    <button onclick="pauseTimer()" class="w-full inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-yellow-700 bg-yellow-50 border border-yellow-200 rounded hover:bg-yellow-100">
                        ⏸️ Pause
                    </flux:button>
                    <button onclick="stopTimer()" class="w-full inline-flex items-center justify-center px-2 py-1 text-xs font-medium text-red-700 bg-red-50 border border-red-200 rounded hover:bg-red-100">
                        ⏹️ Stop
                    </flux:button>
                </div>
            `;
        } else {
            timerElement.innerHTML = '<span class="text-gray-400">No active timer</span>';
            
            // Reset button to start timer
            timerButtonElement.innerHTML = `
                <button onclick="showTimerPrompt()" class="w-full inline-flex items-center justify-center px-6 py-2 text-sm font-medium text-green-700 bg-green-50 border border-green-200 rounded-md hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                    ⚡ Start Timer
                </flux:button>
            `;
        }
    }
    
    // Update rate info with enhanced display
    const rateElement = document.getElementById('current-rate-info');
    if (rateElement && data.rate_info?.visual_indicator) {
        const indicator = data.rate_info.visual_indicator;
        const isPremium = data.rate_info.is_premium;
        
        rateElement.innerHTML = `
            <div class="flex items-center space-x-1">
                <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-${indicator.color}-100 text-${indicator.color}-800">
                    ${indicator.badge}
                </span>
                ${isPremium ? `<span class="text-xs font-bold text-${indicator.color}-600">${data.rate_info.multiplier}x</span>` : ''}
            </div>
        `;
    }
}

// Timer control functions
function pauseTimer() {
    if (confirm('Pause the current timer?')) {
        fetch('{{ route('tickets.pause-timer', $ticket) }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({
                reason: 'User requested pause'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('⏸️ Timer paused successfully', 'info');
                loadBillingDashboard(); // Refresh to show updated state
            } else {
                showNotification('❌ ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error pausing timer:', error);
            showNotification('❌ Error pausing timer', 'error');
        });
    }
}

function stopTimer() {
    if (confirm('Stop the current timer? This will save the time entry.')) {
        fetch('{{ route('tickets.stop-timer', $ticket) }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            },
            body: JSON.stringify({})
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification(`⏹️ Timer stopped - ${data.hours_worked}h saved ($${data.amount})`, 'success');
                loadBillingDashboard(); // Refresh to show updated state
            } else {
                showNotification('❌ ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error stopping timer:', error);
            showNotification('❌ Error stopping timer', 'error');
        });
    }
}

function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg ${type === 'success' ? 'bg-green-500' : type === 'error' ? 'bg-red-500' : 'bg-blue-500'} text-white`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 5000);
}

// Refresh billing dashboard every 10 seconds for live updates
setInterval(loadBillingDashboard, 10000);
</script>
@endpush