<?php

namespace Database\Factories\Domains\Client\Models;

use App\Domains\Client\Models\ClientDocument;
use Illuminate\Database\Eloquent\Factories\Factory;

class ClientDocumentFactory extends Factory
{
    protected $model = ClientDocument::class;

    public function definition(): array
    {
        return ['company_id' => \App\Domains\Company\Models\Company::factory(),
            'type' => $this->faker->numberBetween(1, 5),
            'category' => $this->faker->optional()->randomNumber(),
            'subcategory' => $this->faker->optional()->randomNumber(),
            'title' => $this->faker->words(3, true),
            'description' => $this->faker->optional()->sentence,
            'filename' => $this->faker->words(3, true),
            'original_filename' => $this->faker->words(3, true),
            'mime_type' => $this->faker->numberBetween(1, 5),
            'extension' => $this->faker->optional()->randomNumber(),
            'file_size' => $this->faker->optional()->numberBetween(1, 100),
            'storage_path' => $this->faker->optional()->randomNumber(),
            'storage_disk' => $this->faker->optional()->randomNumber(),
            'file_hash' => $this->faker->optional()->randomNumber(),
            'checksum' => $this->faker->optional()->randomNumber(),
            'is_system_generated' => $this->faker->boolean(70),
            'is_template_based' => $this->faker->boolean(70),
            'is_signed' => $this->faker->boolean(70),
            'signatures' => $this->faker->optional()->randomNumber(),
            'is_encrypted' => $this->faker->boolean(70),
            'encryption_method' => $this->faker->optional()->randomNumber(),
            'visibility' => $this->faker->optional()->randomNumber(),
            'requires_authentication' => $this->faker->boolean(),
            'download_enabled' => $this->faker->boolean(70),
            'view_enabled' => $this->faker->boolean(70),
            'print_enabled' => $this->faker->boolean(70),
            'share_enabled' => $this->faker->boolean(70),
            'access_permissions' => $this->faker->optional()->randomNumber(),
            'download_restrictions' => $this->faker->optional()->randomNumber(),
            'security_level' => $this->faker->optional()->randomNumber(),
            'contains_pii' => $this->faker->optional()->randomNumber(),
            'contains_phi' => $this->faker->optional()->randomNumber(),
            'contains_financial_data' => $this->faker->optional()->randomNumber(),
            'compliance_tags' => $this->faker->optional()->randomNumber(),
            'requires_retention' => $this->faker->boolean(),
            'retention_until' => $this->faker->optional()->randomNumber(),
            'auto_delete_enabled' => $this->faker->boolean(70),
            'version' => $this->faker->optional()->randomNumber(),
            'is_current_version' => $this->faker->boolean(70),
            'version_notes' => $this->faker->optional()->sentence,
            'superseded_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'superseded_by' => $this->faker->optional()->randomNumber(),
            'related_model_type' => $this->faker->numberBetween(1, 5),
            'processing_status' => $this->faker->randomElement(['pending', 'processing', 'completed']),
            'processing_error' => $this->faker->optional()->randomNumber(),
            'text_extracted' => $this->faker->optional()->randomNumber(),
            'extracted_text' => $this->faker->optional()->randomNumber(),
            'metadata_extracted' => $this->faker->optional()->randomNumber(),
            'thumbnail_generated' => $this->faker->optional()->randomFloat(2, 0, 1000),
            'thumbnail_path' => $this->faker->optional()->randomNumber(),
            'page_count' => $this->faker->optional()->numberBetween(1, 100),
            'email_delivery_enabled' => $this->faker->safeEmail,
            'email_recipients' => $this->faker->safeEmail,
            'last_emailed_at' => $this->faker->safeEmail,
            'portal_notification_sent' => $this->faker->optional()->numberBetween(1, 100),
            'portal_notification_sent_at' => $this->faker->numberBetween(1, 100),
            'requires_acknowledgment' => $this->faker->boolean(),
            'acknowledged_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'acknowledgment_method' => $this->faker->optional()->randomNumber(),
            'view_count' => $this->faker->optional()->numberBetween(1, 100),
            'download_count' => $this->faker->optional()->numberBetween(1, 100),
            'print_count' => $this->faker->optional()->numberBetween(1, 100),
            'share_count' => $this->faker->optional()->numberBetween(1, 100),
            'first_viewed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'last_viewed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'first_downloaded_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'last_downloaded_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'access_history' => $this->faker->optional()->randomNumber(),
            'external_source' => $this->faker->optional()->randomNumber(),
            'external_metadata' => $this->faker->optional()->randomNumber(),
            'sync_enabled' => $this->faker->boolean(70),
            'last_synced_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'sync_error' => $this->faker->optional()->randomNumber(),
            'tags' => $this->faker->optional()->randomNumber(),
            'labels' => $this->faker->optional()->randomNumber(),
            'reference_number' => $this->faker->optional()->numberBetween(1, 100),
            'document_date' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'received_date' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'effective_date' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'expiry_date' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'show_in_portal' => $this->faker->optional()->numberBetween(1, 100),
            'portal_sort_order' => $this->faker->optional()->numberBetween(1, 100),
            'portal_display_name' => $this->faker->words(3, true),
            'portal_description' => $this->faker->optional()->sentence,
            'portal_icon' => $this->faker->optional()->numberBetween(1, 100),
            'portal_settings' => $this->faker->optional()->numberBetween(1, 100),
            'workflow_status' => $this->faker->randomElement(['draft', 'active', 'completed']),
            'approved_by' => $this->faker->numberBetween(1, 10),
            'approved_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'approval_notes' => $this->faker->optional()->sentence,
            'requires_approval' => $this->faker->boolean(),
            'approval_workflow' => $this->faker->optional()->randomNumber(),
            'custom_fields' => $this->faker->optional()->randomNumber(),
            'metadata' => json_encode([]),
            'notes' => $this->faker->optional()->sentence,
            'client_notes' => $this->faker->optional()->sentence,
            'status' => $this->faker->randomElement(['active', 'inactive', 'pending']),
            'archived_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'deletion_reason' => $this->faker->optional()->randomNumber(),
            'uploaded_by' => $this->faker->numberBetween(1, 10),
            'updated_by' => $this->faker->optional()->dateTimeBetween('-1 year', 'now')
        ];
    }
}
