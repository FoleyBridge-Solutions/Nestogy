<?php

namespace Database\Factories;

use App\Models\PortalNotification;
use Illuminate\Database\Eloquent\Factories\Factory;

class PortalNotificationFactory extends Factory
{
    protected $model = PortalNotification::class;

    public function definition(): array
    {
        return [
            'company_id' => 1,
            'type' => $this->faker->numberBetween(1, 5),
            'category' => $this->faker->optional()->word,
            'priority' => $this->faker->optional()->word,
            'title' => $this->faker->words(3, true),
            'message' => $this->faker->optional()->word,
            'description' => $this->faker->optional()->sentence,
            'data' => $this->faker->optional()->word,
            'icon' => $this->faker->optional()->word,
            'color' => $this->faker->optional()->word,
            'action_url' => $this->faker->optional()->url,
            'action_text' => $this->faker->optional()->word,
            'show_in_portal' => $this->faker->optional()->word,
            'send_email' => $this->faker->safeEmail,
            'send_sms' => $this->faker->optional()->word,
            'send_push' => $this->faker->optional()->word,
            'delivery_channels' => $this->faker->optional()->word,
            'email_subject' => $this->faker->safeEmail,
            'email_body' => $this->faker->safeEmail,
            'email_template' => $this->faker->safeEmail,
            'email_sent_at' => $this->faker->safeEmail,
            'email_delivered' => $this->faker->safeEmail,
            'email_error' => $this->faker->safeEmail,
            'sms_message' => $this->faker->optional()->word,
            'sms_sent_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'sms_delivered' => $this->faker->optional()->word,
            'sms_error' => $this->faker->optional()->word,
            'push_title' => $this->faker->words(3, true),
            'push_body' => $this->faker->optional()->word,
            'push_data' => $this->faker->optional()->word,
            'push_sent_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'push_delivered' => $this->faker->optional()->word,
            'push_error' => $this->faker->optional()->word,
            'status' => 'active',
            'is_read' => $this->faker->boolean(70),
            'read_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'is_dismissed' => $this->faker->boolean(70),
            'dismissed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'requires_action' => $this->faker->optional()->word,
            'action_completed' => $this->faker->optional()->word,
            'action_completed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'scheduled_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'expires_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'is_recurring' => $this->faker->boolean(70),
            'recurring_pattern' => $this->faker->optional()->word,
            'next_occurrence' => $this->faker->optional()->word,
            'target_conditions' => $this->faker->optional()->word,
            'personalization_data' => $this->faker->optional()->word,
            'language' => $this->faker->optional()->word,
            'timezone' => $this->faker->optional()->word,
            'related_model_type' => $this->faker->numberBetween(1, 5),
            'group_key' => $this->faker->optional()->word,
            'thread_position' => $this->faker->optional()->word,
            'is_summary' => $this->faker->boolean(70),
            'tracking_data' => $this->faker->optional()->word,
            'view_count' => $this->faker->optional()->word,
            'first_viewed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'last_viewed_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'click_count' => $this->faker->optional()->word,
            'first_clicked_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'last_clicked_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'variant' => $this->faker->optional()->word,
            'experiment_data' => $this->faker->optional()->word,
            'requires_acknowledgment' => $this->faker->optional()->word,
            'acknowledged_at' => $this->faker->optional()->dateTimeBetween('-1 year', 'now'),
            'acknowledgment_method' => $this->faker->optional()->word,
            'audit_trail' => $this->faker->optional()->word,
            'respects_do_not_disturb' => $this->faker->optional()->word,
            'client_preferences' => $this->faker->optional()->word,
            'can_be_disabled' => $this->faker->optional()->word,
            'frequency_limit' => $this->faker->optional()->word,
            'source_system' => $this->faker->optional()->word,
            'webhook_data' => $this->faker->optional()->word,
            'trigger_webhooks' => $this->faker->optional()->word,
            'metadata' => $this->faker->optional()->word,
            'custom_fields' => $this->faker->optional()->word,
            'internal_notes' => $this->faker->optional()->sentence,
            'created_by' => $this->faker->optional()->word,
            'updated_by' => $this->faker->optional()->dateTimeBetween('-1 year', 'now')
        ];
    }
}
