<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('usage_alerts', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('company_id');
            $table->unsignedBigInteger('client_id')->nullable();
            $table->unsignedBigInteger('usage_pool_id')->nullable();
            $table->unsignedBigInteger('usage_bucket_id')->nullable();
            $table->string('alert_name');
            $table->string('alert_code')->nullable();
            $table->string('alert_type')->nullable();
            $table->text('description')->nullable();
            $table->boolean('is_active')->default(false);
            $table->string('usage_type')->nullable();
            $table->string('service_types')->nullable();
            $table->string('monitoring_scope')->nullable();
            $table->string('measurement_period')->nullable();
            $table->string('threshold_type')->nullable();
            $table->string('threshold_value')->nullable();
            $table->string('threshold_unit')->nullable();
            $table->string('critical_threshold')->nullable();
            $table->string('warning_threshold')->nullable();
            $table->string('comparison_operator')->nullable();
            $table->string('alert_conditions')->nullable();
            $table->string('trigger_criteria')->nullable();
            $table->string('require_consecutive_periods')->nullable();
            $table->string('consecutive_period_count')->nullable();
            $table->string('enable_predictive_alerts')->nullable();
            $table->string('prediction_horizon_hours')->nullable();
            $table->string('prediction_confidence_threshold')->nullable();
            $table->string('prediction_model_params')->nullable();
            $table->string('prediction_algorithm')->nullable();
            $table->string('current_usage')->nullable();
            $table->string('current_threshold_percentage')->nullable();
            $table->string('alert_status')->default('active');
            $table->timestamp('last_check_at')->nullable();
            $table->timestamp('last_triggered_at')->nullable();
            $table->string('trigger_count')->nullable();
            $table->string('severity_level')->nullable();
            $table->string('enable_escalation')->nullable();
            $table->string('escalation_rules')->nullable();
            $table->string('escalation_delay_minutes')->nullable();
            $table->timestamp('last_escalated_at')->nullable();
            $table->string('escalation_level')->nullable();
            $table->string('notification_methods')->nullable();
            $table->string('notification_recipients')->nullable();
            $table->string('email_notifications')->nullable();
            $table->string('sms_notifications')->nullable();
            $table->string('webhook_notifications')->nullable();
            $table->string('dashboard_notifications')->nullable();
            $table->string('email_template')->nullable();
            $table->string('email_recipients')->nullable();
            $table->string('email_subject_template')->nullable();
            $table->string('email_include_charts')->nullable();
            $table->string('email_include_recommendations')->nullable();
            $table->string('sms_recipients')->nullable();
            $table->string('sms_message_template')->nullable();
            $table->string('sms_only_critical')->nullable();
            $table->string('webhook_url')->nullable();
            $table->string('webhook_method')->nullable();
            $table->string('webhook_headers')->nullable();
            $table->string('webhook_payload_template')->nullable();
            $table->string('webhook_timeout_seconds')->nullable();
            $table->timestamp('webhook_retry_attempts')->nullable();
            $table->string('enable_suppression')->nullable();
            $table->string('suppression_window_minutes')->nullable();
            $table->string('max_alerts_per_hour')->nullable();
            $table->string('max_alerts_per_day')->nullable();
            $table->string('suppression_until')->nullable();
            $table->string('suppressed_alert_count')->nullable();
            $table->string('respect_business_hours')->nullable();
            $table->string('business_hours_schedule')->nullable();
            $table->string('time_zone')->nullable();
            $table->string('weekend_notifications')->nullable();
            $table->string('holiday_notifications')->nullable();
            $table->string('enable_automated_actions')->nullable();
            $table->string('automated_actions')->nullable();
            $table->string('auto_suspend_services')->nullable();
            $table->string('auto_limit_usage')->nullable();
            $table->string('auto_purchase_additional_usage')->nullable();
            $table->string('automation_parameters')->nullable();
            $table->string('enable_batching')->nullable();
            $table->string('batch_size')->nullable();
            $table->string('batch_interval_minutes')->nullable();
            $table->timestamp('last_batch_processed_at')->nullable();
            $table->string('processing_priority')->nullable();
            $table->string('recent_alerts')->nullable();
            $table->string('alert_accuracy_percentage')->nullable();
            $table->string('false_positive_count')->nullable();
            $table->string('false_negative_count')->nullable();
            $table->string('performance_metrics')->nullable();
            $table->unsignedBigInteger('external_alert_id')->nullable();
            $table->string('integration_settings')->nullable();
            $table->string('sync_with_monitoring_systems')->nullable();
            $table->timestamp('last_external_sync_at')->nullable();
            $table->boolean('is_test_alert')->default(false);
            $table->timestamp('last_test_triggered_at')->nullable();
            $table->string('test_results')->nullable();
            $table->boolean('test_mode_enabled')->default(false);
            $table->string('requires_acknowledgment')->nullable();
            $table->string('acknowledgment_log')->nullable();
            $table->boolean('audit_trail_enabled')->default(false);
            $table->string('compliance_requirements')->nullable();
            $table->string('cost_savings_generated')->nullable();
            $table->string('revenue_protected')->nullable();
            $table->string('issues_prevented')->nullable();
            $table->string('optimization_suggestions')->nullable();
            $table->string('alert_lifecycle_stage')->nullable();
            $table->timestamp('alert_created_date')->nullable();
            $table->timestamp('alert_last_modified_date')->nullable();
            $table->string('created_by')->nullable();
            $table->timestamp('updated_by')->nullable();
            $table->string('modification_reason')->nullable();
            $table->timestamps();
            $table->softDeletes('archived_at');
            
            $table->foreign('company_id')->references('id')->on('companies')->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('usage_alerts');
    }
};
