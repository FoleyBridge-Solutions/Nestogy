name: CI

on:
  - pull_request
  - push

jobs:
  tests:
    name: Tests

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: nestogy_test
          POSTGRES_USER: nestogy
          POSTGRES_PASSWORD: nestogy_dev_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          coverage: xdebug
          extensions: pgsql, pdo_pgsql

      - name: Configure Flux Pro credentials
        env:
          FLUX_USERNAME: ${{ secrets.FLUX_USERNAME }}
          FLUX_LICENSE_KEY: ${{ secrets.FLUX_PRO_TOKEN }}
        run: |
          echo "{\"http-basic\":{\"composer.fluxui.dev\":{\"username\":\"${FLUX_USERNAME}\",\"password\":\"${FLUX_LICENSE_KEY}\"}}}" > auth.json

      - name: Install dependencies with composer
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist --no-scripts

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install npm dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Setup environment file
        run: |
          echo "APP_ENV=testing" > .env
          echo "APP_KEY=base64:$(openssl rand -base64 32)" >> .env
          echo "STRIPE_SECRET=sk_test_dummy" >> .env
          echo "STRIPE_PUBLISHABLE=pk_test_dummy" >> .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=nestogy_test" >> .env
          echo "DB_USERNAME=nestogy" >> .env
          echo "DB_PASSWORD=nestogy_dev_pass" >> .env

      - name: Run database migrations
        run: php artisan migrate --force --seed

      - name: Run tests with phpunit/phpunit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
